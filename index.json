<<<<<<< HEAD
[{"categories":null,"content":"Bio Father. Husbsand. Pastafari. The one who loves developing software. Manufactured in 1971 in Barcelona (Spain) Programming things for the last 30+ years. In love with C#, Java, SQL, software architecture, async patterns \u0026 more. Ex-teacher, Blogger, Speaker, Geek \u0026 family guy, living in Andorra since 2001. Microsoft MVP 2002-2016, MAP, MCC Active member and moderator in the good old MS newsgroups and forums for almost two decades. Founder of AndorraDotNet, the first dotNet user group in the country. Host of several events, like Geek-a-palooza. Now in a well deserved retirement ","date":"2020-05-01","objectID":"/about/:1:0","tags":null,"title":"About me","uri":"/about/"},{"categories":null,"content":"I like Coding. Family. Mountains. Sports. Food. Nature. Feminism. Human rights. Scifi. Fantasy. Traveling. Science. Atheism. ","date":"2020-05-01","objectID":"/about/:2:0","tags":null,"title":"About me","uri":"/about/"},{"categories":null,"content":"I dislike Anti-vaxxers. Racism. Religious fundamentalists. Pseudoscience. Lack of imagination or proud on ignorance. Politicians. ","date":"2020-05-01","objectID":"/about/:3:0","tags":null,"title":"About me","uri":"/about/"},{"categories":null,"content":"Tech profile Languages and technologies IтАЩve learnt through the years. Language/Technology Start End Expertise Basic 1983 1988 тнРтнРтнРтнРтнР Assembler 1986 1986 тнР C 1990 1997 тнРтнРтнРтнР C++ 1992 2000 тнРтнРтнР Pascal 1992 1994 тнРтнРтнР ObjectPal 1994 1994 тнР Visual Basic 1994 2002 тнРтнРтнРтнРтнР SQL (TSQL/PS-SQL) 1994 - тнРтнРтнРтнРтнР Clipper 1998 1999 тнРтнРтнР Delphi 1998 2002 тнРтнРтнРтнР Java 1998 2004 тнРтнРтнРтнР ActionScript 1999 1999 тнР Visual Basic.NET 2002 2010 тнРтнРтнРтнРтнР C# 2002 - тнРтнРтнРтнРтнР Javascript 2008 - тнРтнРтнР F# 2012 2012 тнРтнР Typescript 2018 2018 тнРтнР CSS 2018 - тнРтнР Python 2019 - тнРтнР Go 2020 - тнР ","date":"2020-05-01","objectID":"/about/:4:0","tags":null,"title":"About me","uri":"/about/"},{"categories":null,"content":"Who am I? Speaking at dotnet conference View this post on Instagram A post shared by Lluis Franco (@francolluis) on Jan 1, 2019 at 1:12pm PST View this post on Instagram A post shared by Lluis Franco (@francolluis) on Jul 14, 2018 at 11:19am PDT View this post on Instagram A post shared by Lluis Franco (@francolluis) on Aug 19, 2018 at 1:30pm PDT View this post on Instagram A post shared by Lluis Franco (@francolluis) on Feb 12, 2018 at 6:36am PST View this post on Instagram A post shared by Lluis Franco (@francolluis) on Aug 9, 2019 at 12:43am PDT View this post on Instagram A post shared by Lluis Franco (@francolluis) on Aug 9, 2019 at 12:38am PDT View this post on Instagram A post shared by Lluis Franco (@francolluis) on Mar 2, 2019 at 5:43am PST ","date":"2020-05-01","objectID":"/about/:5:0","tags":null,"title":"About me","uri":"/about/"},{"categories":["Development","How To"],"content":"Overview When executing some long-running server side processes on a SQL Server (Stored procedures or functions) would be nice to get progress messages, and why not, a percent value in order to show a progress bar in our application. In the past IтАЩve used different techniques to archive this, from SQL Assemblies for calling a SignalR server, to execute xp_cmdshell, and so many other esoteric ways. None of that solved the problem in an elegant way, but well, it workedтАж more or lessтАж ","date":"2019-09-30","objectID":"/retrieving-events-from-sql-server/:1:0","tags":["csharp","net framework","SQL","SQL Server","Events"],"title":"Retrieving events from SQL Server","uri":"/retrieving-events-from-sql-server/"},{"categories":["Development","How To"],"content":"Changing the point of view Today I noticed the SqlConnection class has an InfoMessage event, and it can be used for тАЬClients that want to process warnings or informational messages sent by the serverтАЭ which is EXACTLY what I was looking for. Processing SQL events It looks promising but, how can I trigger an error from my SQL? If you are a TSQL programmer you surely know RAISERROR, which generates an error message in a similar way the throw C# keyword does. The trick here is its severity argument: It indicates the type of problem encountered by SQL Server, and values under 10 indicate that these errors are not severe. Just warnings or information that SQL server sends to anyone is listening. And whoтАЩs listening? You can imagine ЁЯШД ","date":"2019-09-30","objectID":"/retrieving-events-from-sql-server/:2:0","tags":["csharp","net framework","SQL","SQL Server","Events"],"title":"Retrieving events from SQL Server","uri":"/retrieving-events-from-sql-server/"},{"categories":["Development","How To"],"content":"Show me the code LetтАЩs imagine weтАЩve this long-running stored procedure in our database. WeтАЩre using WAITFOR DELAY for simulating intensive processing. ","date":"2019-09-30","objectID":"/retrieving-events-from-sql-server/:3:0","tags":["csharp","net framework","SQL","SQL Server","Events"],"title":"Retrieving events from SQL Server","uri":"/retrieving-events-from-sql-server/"},{"categories":["Development","How To"],"content":"SQL Script CREATE PROCEDURE [dbo].[TestLongRunningSP] AS BEGIN RAISERROR('1) Starting', 0, 0) WITH NOWAIT; WAITFOR DELAY '00:00:03'; --Wait for 3 seconds RAISERROR('2) Fetching data', 0, 0) WITH NOWAIT; WAITFOR DELAY '00:00:05'; --Wait for 5 seconds RAISERROR('3) Some other actions', 0, 0) WITH NOWAIT; WAITFOR DELAY '00:00:03'; --Wait for 3 seconds RAISERROR('4) Calculating', 0, 0) WITH NOWAIT; WAITFOR DELAY '00:00:02'; --Wait for 2 seconds RAISERROR('5) Finishing', 0, 0) WITH NOWAIT; END Thanks to RAISEERROR when executing this stored procedure we will show this output. 1) Starting 2) Fetching data 3) Some other actions 4) Calculating 5) Finishing Completion time: 2019-09-30T09:33:28.4952150+02:00 Now letтАЩs create some C# code: ","date":"2019-09-30","objectID":"/retrieving-events-from-sql-server/:3:1","tags":["csharp","net framework","SQL","SQL Server","Events"],"title":"Retrieving events from SQL Server","uri":"/retrieving-events-from-sql-server/"},{"categories":["Development","How To"],"content":"C# code First: A class to send the received messages from our repository to its consumer, which in this case the UI will be just a Windows Form (good old boys never die). public class SqlMessageEventArgs { public string Message { get; set; } public int Progress { get; set; } } Notice the Progress property. We will use it later in the last part of the post, be patient ЁЯШП Second: A repository class that open a connection, execute the stored procedure and send messages using a ProcessMessage event. We must explicitly enable the connection to receive these errors and raise handling the InfoMessage event: public class SqlServerRepo { public event EventHandler\u003cSqlMessageEventArgs\u003e ProcessMessage; public string ConnectionString { get; internal set; } public SynchronizationContext SyncContext { get; internal set; } public async Task GetDataAsync() { using (var con = new SqlConnection(ConnectionString)) { con.FireInfoMessageEventOnUserErrors = true; con.InfoMessage += (s, e) =\u003e SyncContext.Post(_ =\u003e ProcessMessage?.Invoke( s, new SqlMessageEventArgs { Message = e.Message, }), null); con.Open(); var sql = \"EXEC dbo.TestLongRunningSP\"; var commandDefinition = new CommandDefinition(sql); await con.ExecuteAsync(commandDefinition); con.Close(); } } } When using async pattern the received messages come from a different thread and cannot be used to update the UI directly. For this reason I always recommend send to the Repo the current synchronization context and use this Context to post to the main thread. Cross thread exception when updating UI from a different thread. Third: Finally letтАЩs create a simple Windows Form with just a button, a progress bar and a list box). const string connectionstring = \"Data Source=YOUR_SERVER;\" + \"Initial Catalog=YOUR_DATABASE;\" + \"Integrated Security=True;\"; private async void button1_Click(object sender, EventArgs e) { var repo = new SqlServerRepo() { ConnectionString = connectionstring, SyncContext = SynchronizationContext.Current }; repo.ProcessMessage += (ms, me) =\u003e { listBoxLog.Items.Add($\"{DateTime.Now} - {me.Message}\"); }; await repo.GetDataAsync(); listBoxLog.Items.Add($\"Finished Process!\"); } This code creates the repo, pass the connection string and the current synchronization context, handles the ProcessMessage event and invoke the GetDataAsync method. Simply and elegant. No dependent assemblies or external resources. ","date":"2019-09-30","objectID":"/retrieving-events-from-sql-server/:3:2","tags":["csharp","net framework","SQL","SQL Server","Events"],"title":"Retrieving events from SQL Server","uri":"/retrieving-events-from-sql-server/"},{"categories":["Development","How To"],"content":"One more thing What about the progress bar? Just use the state argument of the RAISERROR method on the SP like this: CREATE PROCEDURE [dbo].[TestLongRunningSP] AS BEGIN RAISERROR('1) Starting', 0, 10) WITH NOWAIT; WAITFOR DELAY '00:00:03'; --Wait for 3 seconds RAISERROR('2) Fetching data', 0, 30) WITH NOWAIT; WAITFOR DELAY '00:00:05'; --Wait for 5 seconds RAISERROR('3) Some other actions', 0, 60) WITH NOWAIT; WAITFOR DELAY '00:00:03'; --Wait for 3 seconds RAISERROR('4) Calculating', 0, 70) WITH NOWAIT; WAITFOR DELAY '00:00:02'; --Wait for 2 seconds RAISERROR('5) Finishing', 0, 100) WITH NOWAIT; END Then update the GetDataAsync method: public async Task GetDataAsync() { using (var con = new SqlConnection(ConnectionString)) { con.FireInfoMessageEventOnUserErrors = true; con.InfoMessage += (s, e) =\u003e SyncContext.Post(_ =\u003e ProcessMessage?.Invoke( s, new SqlMessageEventArgs { Message = e.Message, Progress = e.Errors[0]?.State ?? 0 }), null); con.Open(); var sql = \"EXEC dbo.TestLongRunningSP\"; var commandDefinition = new CommandDefinition(sql); await con.ExecuteAsync(commandDefinition); con.Close(); } } And finally the code in the form: repo.ProcessMessage += (ms, me) =\u003e { listBoxLog.Items.Add($\"{DateTime.Now} - {me.Message}\"); progressBar.Value = me.Progress; }; And thatтАЩs all! Hope you enjoy it, and please, send me your thoughts about this solution. ","date":"2019-09-30","objectID":"/retrieving-events-from-sql-server/:3:3","tags":["csharp","net framework","SQL","SQL Server","Events"],"title":"Retrieving events from SQL Server","uri":"/retrieving-events-from-sql-server/"},{"categories":["Development","How To"],"content":"Overview Recently I had to read some data from different OLAP cubes and show this information in our application. This could be accomplished using ADOMD.NET client library, which is the multidimensional equivalent to the ADO.NET libraries. This library provides a set of classes (Connections, Commands and Readers) that allow developers to connect, query and get data from these multidimensional sources in the same way the classical ADO.NET library does. Maybe the easiest way to read data is using the class AdomdDataReader. This object retrieves a read-only, forward-only, flattened stream of data from an analytical data source. Also implements the IDataReader interface (like the good-old DataReader). In non dynamic scenarios, we developers, tend to use ORMs like NHibertate, EF or Dapper (my favorite), to translate data from our models to classes. But these ORMs doesnтАЩt support multidimensional sources, because after all, they are only supersets or extensions of the ADO.NET model and are based on this existing object model. So, our goal here will be replicate in a multidimensional environment the way Dapper allows you to connect to a server, read some data and (the most important part) return these data as a typed List of objects. ","date":"2017-12-12","objectID":"/getting-data-from-olap-cubes/:1:0","tags":["csharp","net framework","OLAP","ADOMD.NET","generics"],"title":"Getting data from OLAP cubes","uri":"/getting-data-from-olap-cubes/"},{"categories":["Development","How To"],"content":"Testing the query LetтАЩs see how it works before dig into the details: using (var conn = new AdomdConnection(connectionString)) { conn.Open(); var commandText = @\"SELECT { [Measures].[Gains Period], [Measures].[Gains YTD], [Measures].[Amount] } ON COLUMNS, [Valuation Dates Accumulated].[Hierarchy].[Year].Members ON ROWS FROM Accumulated Where ({ @PortfolioId })\"; var data = conn.Query\u003cMyResultDTO\u003e(commandText, new AdomdParameterMultipleValues\u003cint\u003e() { ParameterName = \"@PortfolioId\", MemberName = \"[Portfolios].[Port Code]\", Values = new List\u003cint\u003e() { 282, 185 } } ); conn.Close(); } First of all we have a SQL script (highligted lines above) that returns some sample data of 3 different measures year by year (gains in period, gains year-to-date and the amount of money). Sample data Our goal here is translate these data into a generic List of our own DTO: internal class MyResultDTO { [OLAPMemberNameAttribute(\"[Valuation Dates Accumulated].[Hierarchy].[Year].[MEMBER_CAPTION]\")] public string Year { get; set; } [OLAPMemberNameAttribute(\"[Measures].[Gains Period]\")] public decimal? GainsPeriod { get; set; } [OLAPMemberNameAttribute(\"[Measures].[Gains YTD]\")] public decimal? GainsYTD { get; set; } [OLAPMemberNameAttribute(\"[Measures].[Amount]\")] public decimal? Amount { get; set; } } EDIT (2018-12-11) : Added custom attribute to the post, used to decorate our DTO. public class OLAPMemberNameAttribute : System.Attribute { string _Description = string.Empty; public OLAPMemberNameAttribute(string description) { _Description = description; } public string Description { get { return _Description; } } } Notice that in C# properties can not contain spaces so we previously have to тАШmapтАЩ the DataReader column names into valid property names. The trick here is create an attribute for decorating each property with the equivalent column name in the reader. The magic here is inside the generic Query Method. This method is just an extension method of the AdomdConnection object (Dapper style) and itтАЩs mission will be: Replace the parameters in the command string тАЬтАжWhere ({ @PortfolioId })тАЭ Execute the command against a valid connection Transform the returned IDataReader into a List public static List\u003cT\u003e Query\u003cT\u003e( this AdomdConnection conn, string commandText, params object[] parameters) { var commandTextParameters = ReplaceCommandTextParameters(commandText, parameters); var cmd = new AdomdCommand(commandTextParameters, conn); var dr = cmd.ExecuteReader(); return dr.ToList\u003cT\u003e(); } Now letтАЩs focus on the third point and create another extension method of the IDataReader interface. This method will transform the returned result set into a generics List OMG dude! Code on interfaces? YesтАж IтАЩll burn in hell, I know it ЁЯШД public static List\u003cT\u003e ToList\u003cT\u003e(this IDataReader dr) { var list = new List\u003cT\u003e(); var obj = default(T); while (dr.Read()) { obj = Activator.CreateInstance\u003cT\u003e(); foreach (var prop in obj.GetType().GetProperties()) { var columnDescription = getPropertyDescription(obj, prop.Name); if (existsDataReaderColumn(dr, columnDescription)) copyColumnValueToProperty(dr, obj, prop); } list.Add(obj); } return list; } static void copyColumnValueToProperty\u003cT\u003e(IDataReader dr, T obj, PropertyInfo prop) { try { var columnDescription = getPropertyDescription(obj, prop.Name); var columnOrdinal = dr.GetOrdinal(columnDescription); var value = dr[columnOrdinal]; var canBeNull = !prop.PropertyType.IsValueType || (Nullable.GetUnderlyingType(prop.PropertyType) != null); var castToType = Nullable.GetUnderlyingType(prop.PropertyType) ?? prop.PropertyType; if (canBeNull \u0026\u0026 value == null) prop.SetValue(obj, null, null); else prop.SetValue(obj, Convert.ChangeType(value, castToType, CultureInfo.InvariantCulture), null); } catch { } } static bool existsDataReaderColumn(IDataReader dr, string propertyName) { try { var obj = dr[propertyName]; return true; } catch { return false; } } private static string getPropertyDescription(object value, string propname) { var propinfo = valu","date":"2017-12-12","objectID":"/getting-data-from-olap-cubes/:2:0","tags":["csharp","net framework","OLAP","ADOMD.NET","generics"],"title":"Getting data from OLAP cubes","uri":"/getting-data-from-olap-cubes/"},{"categories":["Development","How To"],"content":"Overview In these times of APIs-everywhere, it may sound like an anachronism the use SFTP to connect to a remote server and get a list of files for exchanging information, but in the financial world (sadly) itтАЩs more common than you think. In my current project IтАЩve to connect to a remote server via Secure File Transfer Protocol (aka SFTP) using a user name, a RSA private key and a phassphrase. Once connected, the goal is to read some files from a remote folder and download them to a local folder. To accomplish this I recommend you to use SSH.NET, one of the most popular SSH libraries for .NET, available on nuget. SSH.NET on NuGet More info about SSH.NET here. ","date":"2017-11-29","objectID":"/connect-via-sftp-using-ssh.net/:1:0","tags":["csharp","net framework","SFTP","SSH.NET"],"title":"Connect via SFTP using SSH.NET","uri":"/connect-via-sftp-using-ssh.net/"},{"categories":["Development","How To"],"content":"Connecting to the server The most difficult part here is configure the connection, as usual. We need to provide the server url and port, in combination with the username and a file that contains the private key of the RSA certificate, and -of course- the passphrase. HereтАЩs the final code, and it works :) private static void SFTP_Connect_And_Download_Sample() { var host = \"sftp_server_address.com\"; var port = 999; var username = \"your_username\"; var passphrase = \"your_passphrase\"; var privateKeyLocalFilePath = @\"your_localpath\\...\\PrivateKeyOpenSSH.ppk\"; var remoteFolderPath = \"/\"; var localFolferPath = @\"D:\\locafiles\\\"; var key = File.ReadAllText(privateKeyLocalFilePath); var buf = new MemoryStream(Encoding.UTF8.GetBytes(key)); var privateKeyFile = new PrivateKeyFile(buf, passphrase); var connectionInfo = new ConnectionInfo( host, port, username, new PrivateKeyAuthenticationMethod(username, privateKeyFile)); using (var client = new SftpClient(connectionInfo)) { client.Connect(); var files = client.ListDirectory(remoteFolderPath); foreach (var file in files) { Console.WriteLine(file); using (var targetFile = new FileStream( Path.Combine(localFolferPath, file.Name), FileMode.Create)) { client.DownloadFile(file.FullName, targetFile); targetFile.Close(); } } client.Disconnect(); } } Note Use the full path to your file in the privateKeyLocalFilePath variable. Take a look at the highlighted line (7). The key here is creating a file that contains the privateKey. I recommend you to use filezilla or similar to test the connection and save it to a file. Your file should looks something like this: PuTTY-User-Key-File-2: ssh-rsa Encryption: aes256-cbc Comment: rsa-key-KBL-20171006 Public-Lines: 6 AAB3NzaC1yc2EAAAJQAAAQEAnHp1CA4xF04ZdOQ/rsxJoW9fPJ2RD FgMNVIqsUsjeRbIoZ2y8SMD9b7MMB0lpKXgJ2dYDgOnh2q j4VTpEoI2JWh4NdQgSH0O+2oLmQnwgDPT7Kva095ggEQiqScX4+31aY02/nz mK86sxq/sUsW/UqgS+pPViRQLVzDXFf8XIYSSZngmV+Rk108BQ== Private-Lines: 14 khHfZWB0vBIFtKc4s98xGDFhwZNJQByUTtE7um0tcU4cwy1QTPf3GIuN vyhHxIGx3LBtFJqzbZVJtOJVSYjkBTGbNc62D0uJCxYVf8PUUStI6GbOkkyDW/Vt beWZ3s/DugsImjcbPxdEz/2X86uzd5U5v4/wGKQr8GWJtNksMcJ k7JgRYGA/t0cSE2980MxhZOBg2Gn7+0A6mWgSf2Rr7hpcqsou1 hmc1HYtN7Oj4WT7hvRt8ZAC3/ekTdJ4K3K7vKglSHoQ tnimHaanJHz4RGBb78Alllk+OYk3TN0Etcwod3401cLpjYYeq6veZLA/KfCHuiJ+ +Zqoy//NY9egfXd1hB0kmiemwO8wGfLS7ppS/WvPOknW9I8SNMllR1vmO3Hk6S3x KfAG03ZWNoKDLvAIUllNyMpf9p8oKLF2ny4bJKsfNtr4Y0ejQJUFkC uNz1S4VJ8j1fRcIjx4yT121B9BDfp486RUmnEgsOFEtmVyHPfNxYzDXq2MjTf4l/ MI5cKWHrDbDC/Cu3YvkF3gekLAb/j9Cie/feHmSnbuZ2VEr6zUt10yaH4hPejCOw FYDZb0I8xxxWJZ6BbpLWDqeD0Oiss8UnDhha/iKvodA9LIG0T VRlScvGvuzClGYkc7UIWIoARvdxp46YlGMu4mWGeVkNcrxXnmUkdKyNqGjAGJoK/ Private-MAC: d288fffe72914eb62ed60a7e50fd8ce775 ","date":"2017-11-29","objectID":"/connect-via-sftp-using-ssh.net/:2:0","tags":["csharp","net framework","SFTP","SSH.NET"],"title":"Connect via SFTP using SSH.NET","uri":"/connect-via-sftp-using-ssh.net/"},{"categories":["Development","How To"],"content":"Bonus * the trick * IтАЩve spent a lot of time before it works receiving a SSH exception тАЬInvalid private key fileтАЭ, but the same key file works fine when using the app Filezilla to connect, so #WhatTheHell is going on ЁЯШм Finally I realized this is because the private key must be compatible with SshNet, so we have to convert the private key using PuTTY key Generator (in my case, the same app we used to create the certificate). Once opened in PuTTY, just export your file key to OpenSSH and use this new ppk file instead of the previous one. Export OpenSSH key If you open the new file you will see that the key file now begins with: тАФтАУBEGIN RSA PRIVATE KEYтАФтАУ And ends with: тАФтАУEND RSA PRIVATE KEYтАФтАУ Now this is a valid SSH private key and it shoud work like a charm ;) Hope you enjoy it! ","date":"2017-11-29","objectID":"/connect-via-sftp-using-ssh.net/:3:0","tags":["csharp","net framework","SFTP","SSH.NET"],"title":"Connect via SFTP using SSH.NET","uri":"/connect-via-sftp-using-ssh.net/"},{"categories":["Development","How To"],"content":"Quick note How to remove diacritics (accents) from a C# string? public static string RemoveDiacritics(this string input) { var stFormD = input.Normalize(NormalizationForm.FormD); var len = stFormD.Length; var sb = new StringBuilder(); for (int i = 0; i \u003c len; i++) { var uc = System.Globalization.CharUnicodeInfo.GetUnicodeCategory(stFormD[i]); if (uc != System.Globalization.UnicodeCategory.NonSpacingMark) { sb.Append(stFormD[i]); } } return (sb.ToString().Normalize(NormalizationForm.FormC)); } ","date":"2014-06-26","objectID":"/remove-diacritics-in-strings/:1:0","tags":["csharp","net framework","Tip","SQL"],"title":"Remove diacritics (accents) in strings","uri":"/remove-diacritics-in-strings/"},{"categories":["Development","How To"],"content":"Bonus track How to remove in TSQL (Microsoft SQL Server) SELECT'├а├й├к├╢hello!'CollateSQL_Latin1_General_CP1253_CI_AI See you soon! ЁЯШЙ ","date":"2014-06-26","objectID":"/remove-diacritics-in-strings/:2:0","tags":["csharp","net framework","Tip","SQL"],"title":"Remove diacritics (accents) in strings","uri":"/remove-diacritics-in-strings/"},{"categories":["Development","How To"],"content":"Extracting system icons from Win32 ","date":"2014-04-16","objectID":"/extract-icons-win32/:1:0","tags":["csharp","net framework","API","Win32"],"title":"Extract extra large icon from a file, folder or drive","uri":"/extract-icons-win32/"},{"categories":["Development","How To"],"content":"Overwiew Hi, everyone! :) In a recent project I was required to show a list of files with their associated icons. It doesnтАЩt sounds quite difficult, and in fact it is not. Except if you have to deal with files in network paths or you want to get different icons sizes, apart the typical 32├Ч32. And well, that was the case If you only need local files and sizes of 32x32 p├нxels you can achieve this using the static method ExtractAssociatedIcon in the class System.Drawing.Icon, but sadly this method doesnтАЩt work with UNC (Universal Naming Convention) paths nor return other sizes that 32├Ч32 pixels. I had to show four different icons sizes including the extra-large icon also called тАЬjumboтАЭ, so I had to some functions and structures from the Win32 API. Of course, if anyone knows a better way to do it, please contact with me ASAP ","date":"2014-04-16","objectID":"/extract-icons-win32/:1:1","tags":["csharp","net framework","API","Win32"],"title":"Extract extra large icon from a file, folder or drive","uri":"/extract-icons-win32/"},{"categories":["Development","How To"],"content":"Show me the (final) code Today I prefer to start from the end so before starting, letтАЩs take a look to the final code: From a file path and the desired size we wanna retrieve the associated icon. var filename = \"\\\\myNetworkResource\\Folder\\SampleDocument.pdf\"; var size = IconSizeEnum.ExtraLargeIcon; var image = GetFileImageFromPath(filename, size); ","date":"2014-04-16","objectID":"/extract-icons-win32/:1:2","tags":["csharp","net framework","API","Win32"],"title":"Extract extra large icon from a file, folder or drive","uri":"/extract-icons-win32/"},{"categories":["Development","How To"],"content":"The ingredients Here are declared all the functions and types we need to use. You can simply paste all this code into a class. [ComImportAttribute()] [GuidAttribute(\"46EB5926-582E-4017-9FDF-E8998DAA0950\")] [InterfaceTypeAttribute(ComInterfaceType.InterfaceIsIUnknown)] private interface IImageList { [PreserveSig] int Add( IntPtr hbmImage, IntPtr hbmMask, ref int pi); [PreserveSig] int ReplaceIcon( int i, IntPtr hicon, ref int pi); [PreserveSig] int SetOverlayImage( int iImage, int iOverlay); [PreserveSig] int Replace( int i, IntPtr hbmImage, IntPtr hbmMask); [PreserveSig] int AddMasked( IntPtr hbmImage, int crMask, ref int pi); [PreserveSig] int Draw( ref IMAGELISTDRAWPARAMS pimldp); [PreserveSig] int Remove( int i); [PreserveSig] int GetIcon( int i, int flags, ref IntPtr picon); }; private struct IMAGELISTDRAWPARAMS { public int cbSize; public IntPtr himl; public int i; public IntPtr hdcDst; public int x; public int y; public int cx; public int cy; public int xBitmap; public int yBitmap; public int rgbBk; public int rgbFg; public int fStyle; public int dwRop; public int fState; public int Frame; public int crEffect; } private struct SHFILEINFO { public IntPtr hIcon; public int iIcon; public uint dwAttributes; [MarshalAs(UnmanagedType.ByValTStr, SizeConst = 254)] public string szDisplayName; [MarshalAs(UnmanagedType.ByValTStr, SizeConst = 260)] public string szTypeName; } private const int SHGFI_SMALLICON = 0x1; private const int SHGFI_LARGEICON = 0x0; private const int SHIL_JUMBO = 0x4; private const int SHIL_EXTRALARGE = 0x2; private const int WM_CLOSE = 0x0010; public enum IconSizeEnum { SmallIcon16 = SHGFI_SMALLICON, MediumIcon32 = SHGFI_LARGEICON, LargeIcon48 = SHIL_EXTRALARGE, ExtraLargeIcon = SHIL_JUMBO } [DllImport(\"user32\")] private static extern IntPtr SendMessage( IntPtr handle, int Msg, IntPtr wParam, IntPtr lParam); [DllImport(\"shell32.dll\")] private static extern int SHGetImageList( int iImageList, ref Guid riid, out IImageList ppv); [DllImport(\"Shell32.dll\")] private static extern int SHGetFileInfo( string pszPath, int dwFileAttributes, ref SHFILEINFO psfi, int cbFileInfo, uint uFlags); [DllImport(\"user32\")] private static extern int DestroyIcon( IntPtr hIcon); ","date":"2014-04-16","objectID":"/extract-icons-win32/:1:3","tags":["csharp","net framework","API","Win32"],"title":"Extract extra large icon from a file, folder or drive","uri":"/extract-icons-win32/"},{"categories":["Development","How To"],"content":"Putting it all together In this code weтАЩre using several API calls to the functions we declared before. You can paste all this code in the same class. HereтАЩs the tricky part: public static System.Drawing.Bitmap GetFileImageFromPath( string filepath, IconSizeEnum iconsize) { IntPtr hIcon = IntPtr.Zero; if (System.IO.Directory.Exists(filepath)) hIcon = GetIconHandleFromFolderPath(filepath, iconsize); else if (System.IO.File.Exists(filepath)) hIcon = GetIconHandleFromFilePath(filepath, iconsize); return GetBitmapFromIconHandle(hIcon); } private static IntPtr GetIconHandleFromFilePath(string filepath, IconSizeEnum iconsize) { var shinfo = new SHFILEINFO(); const uint SHGFI_SYSICONINDEX = 0x4000; const int FILE_ATTRIBUTE_NORMAL = 0x80; uint flags = SHGFI_SYSICONINDEX; return GetIconHandleFromFilePathWithFlags(filepath, iconsize, ref shinfo, FILE_ATTRIBUTE_NORMAL, flags); } private static IntPtr GetIconHandleFromFolderPath(string folderpath, IconSizeEnum iconsize) { var shinfo = new SHFILEINFO(); const uint SHGFI_ICON = 0x000000100; const uint SHGFI_USEFILEATTRIBUTES = 0x000000010; const int FILE_ATTRIBUTE_DIRECTORY = 0x00000010; uint flags = SHGFI_ICON | SHGFI_USEFILEATTRIBUTES; return GetIconHandleFromFilePathWithFlags(folderpath, iconsize, ref shinfo, FILE_ATTRIBUTE_DIRECTORY, flags); } private static System.Drawing.Bitmap GetBitmapFromIconHandle(IntPtr hIcon) { if (hIcon == IntPtr.Zero) return null; var myIcon = System.Drawing.Icon.FromHandle(hIcon); var bitmap = myIcon.ToBitmap(); myIcon.Dispose(); DestroyIcon(hIcon); SendMessage(hIcon, WM_CLOSE, IntPtr.Zero, IntPtr.Zero); return bitmap; } private static IntPtr GetIconHandleFromFilePathWithFlags( string filepath, IconSizeEnum iconsize, ref SHFILEINFO shinfo, int fileAttributeFlag, uint flags) { const int ILD_TRANSPARENT = 1; var retval = SHGetFileInfo(filepath, fileAttributeFlag, ref shinfo, Marshal.SizeOf(shinfo), flags); if (retval == 0) throw (new System.IO.FileNotFoundException()); var iconIndex = shinfo.iIcon; var iImageListGuid = new Guid(\"46EB5926-582E-4017-9FDF-E8998DAA0950\"); IImageList iml; var hres = SHGetImageList((int)iconsize, ref iImageListGuid, out iml); var hIcon = IntPtr.Zero; hres = iml.GetIcon(iconIndex, ILD_TRANSPARENT, ref hIcon); return hIcon; } First, we need to call to SHGetFileInfo function that receives a reference to a structure of type SHFILEINFO, which contains the index of the icon image within the system image list. We will use this index later. Then weтАЩve to perform a second call to the SHGetImageList function that receives an output parameter with an IImageList structure, which is modified within the function. Once we have that COM interface, we only need to call its GetIcon method, passing a parameter with the desired size, and obtaining a handle to the icon by reference. Finally, using the handle we can create an Icon and then convert it to a Bitmap or BitmapSource: Tip: DonтАЩt forget to destroy the resources (Icon) when working with the Win32 API! For better use IтАЩve also created an enumeration IconSizeEnum (see types declaration) with the different flags values as well: public enum IconSizeEnum { SmallIcon16 = SHGFI_SMALLICON, MediumIcon32 = SHGFI_LARGEICON, LargeIcon48 = SHIL_EXTRALARGE, ExtraLargeIcon = SHIL_JUMBO } Finally, create a new Form and add a PictureBox named тАШpictureBox1тАЩ a label called тАШlabelFilePathтАЩ and a Button, and into the ButtonтАЩs click event handler use this code: var size = IconSizeEnum.ExtraLargeIcon; var ofd = new OpenFileDialog(); if (ofd.ShowDialog() == System.Windows.Forms.DialogResult.OK) { labelFilePath.Text = ofd.FileName; pictureBox1.Image = YourClassNameHere.GetFileImageFromPath(ofd.FileName, size); } You can also use UNC paths, including network paths :) Hope this helps! ;) ","date":"2014-04-16","objectID":"/extract-icons-win32/:1:4","tags":["csharp","net framework","API","Win32"],"title":"Extract extra large icon from a file, folder or drive","uri":"/extract-icons-win32/"},{"categories":["Awards"],"content":"My 5 minutes of glory ЁЯШВ Yesterday the guys of MS published my brief interview MVP site. However, it is not the full version, that I copy here. ","date":"2012-10-31","objectID":"/mvp-site-interview/:1:0","tags":["Microsoft","MVP","Interview"],"title":"MVP site interview","uri":"/mvp-site-interview/"},{"categories":["Awards"],"content":"About Llu├нs Franco Born in Barcelona (Spain) with more than 20 years of experience in the software development sector, now lives in Andorra for the past 15 years with his family. Lluis holds a number of Microsoft official certifications such as MCP and MCTS and has been recognized as MVP for the past 10 years due to his active participation and moderation in the MSDN forums since 1997. Currently works as project development manager at FIMARGE a finantial services company based in Andorra. He founded the AndorraDotNet user group in 2007, being the first and almost unique user group based in the country. Since 2010 he is also the president of the Andorra IT Professionals Virtual Association. He owns several blogs and is also a regular host and speaker in local events in the region, such as the тАЬGeek-A-PaloozaaтАЭ conference that took place each summer. He also contributes articles to the technological section of a local newspaper. ","date":"2012-10-31","objectID":"/mvp-site-interview/:1:1","tags":["Microsoft","MVP","Interview"],"title":"MVP site interview","uri":"/mvp-site-interview/"},{"categories":["Awards"],"content":"Llu├нs Franco Interview 1 What does it mean being an MVP? It is something much more important to me now than when I was first awarded, as I wasnтАЩt aware at that time of all the wonderful things that would happen to me and the great people I would meet over the time. Not only at a technical level, what the MVP community of course has, but also for the human quality of the majority of MVPs. I met many of my current best friends thanks to the MVP Program. 2 How was your start in the community? It happened just by chance. As it was the case of many professionals in the IT industry I needed help to solve a problem and posted a question in the today disappeared Microsoft newsgroups, where I got the answer to my questions. I just loved this way of learning from other community members and one day I decided to give something back to them and I started to reply questions there. Sometime after I started running a webpage, a blog, another blogтАж. At some point I did a presentation at a local user group meeting and finally I started a new user group, hosting eventsтАж And I still really enjoy doing these things today. 3 What would you ask Steve Ballmer? Let me seeтАж The first thing that comes to my mind is to ask about some Microsoft business segments long-term strategy. But this is something that almost everybody would ask him, so I would rather ask about the good old timesтАж So Steve, in your opinion, what has been the most important fact in MicrosoftтАЩs history? I am talking about the key factor or point in time that has made Microsoft what it is today. 4 What is the best software product in history? I am in love with C#. For me this is the most beautiful, complete, and powerful programming language ever created. So therefore, the best software product for me is Visual Studio 2012, the best IDE in history (or at least the best I have ever used, that are many). Talking about operating systems, I have no doubt; Windows 8 is far the best one. At that point I have to say that I have not always worked with Microsoft products. 5 What would you change on Visual C#? I would continuously add functional characteristics to it. In the latest versions we have seen the introduction of generic functions, delegates management, LINQ and moreover, lambda expressions have made of C# the programming language I have always dreamed about. It is really fun programming on C#! However some things are still missing such as Nested functions, for example. So as some of my friends mentioned to me, this would make functions to be considered 1st level citizens. There are also other things such as making the Framework and IDE a bit lighter. There are many different types of objects there and some collections could be eliminated. 6 Which is the last book you have read? I am a compulsive technical book reader. But I also love fiction and science fiction books. I have last read тАШReady Player OneтАЩ, a novel with plenty of references of the 80тАЩs : videogames, music, films, role games, comics and even toys. It has a young writing style and I could identify myself with the background described there. I also read technical books and of course, my favorite one: тАШThe SilmarillionтАЩ. 7 Which music CD would you recommend? Just one? In that case I would go for RadioheadтАЩs тАШOk ComputerтАЩ. I really love this bandтАЩs the first albums. I like different kind of music from Bach to the heavy metal, including Jazz music too. 8 What makes you an excellent MVP? I donтАЩt consider myself an тАЬexcellent MVPтАЭ. For me being an MVP means a person with some technical skills but that is willing to share his knowledge and passion with the community in different ways, helping others that have helped them before. So the most important thing here is having the right attitude. So somebody that considers himself as being better than others because of the MVP Award probably wouldnтАЩt deserve this recognition. 9 What is in your тАЬComputer BagтАЭ? There is less and less software and more and more hardware in there. Many sm","date":"2012-10-31","objectID":"/mvp-site-interview/:1:2","tags":["Microsoft","MVP","Interview"],"title":"MVP site interview","uri":"/mvp-site-interview/"},{"categories":["Awards"],"content":"MVP of the year 2011 Surprised. Puzzled. Amazed. These are the words that define better my current feelings. However, while writing these lines IтАЩm just realizing I have a blissful smile, or maybe just a stupid smile. Why? Because I just received an email from Lisa Feigenbaum (Microsoft Community Program Manager) with this message: тАЬCongratulations on being awarded C# MVP of the Year based on your contributions in 2011!тАЭ WOW! ThatтАЩs amazing, and sincerely, totally unexpected For the last 9 years Ive been awarded as a Microsoft MVP and believe me, thatтАЩs something very important for me. Maybe not for being recognized as an тАЬexpertтАЭ because it is hard to use that word while there are so damn good people out there, but because they recognize the work of helping the community. So now, in a private survey all the C# MVPs around the world and the product team have decided to recognize my contributions with the тАЬC# MVP of the yearтАЭ award, whatever that means. On the next March 2nd there will be an honorary dinner sponsored by S. Somasegar (тАЬSomaтАЭ), Senior Vice President of the Developer Division at Microsoft, with other executives and community leads in the division. Unfortunately, I wonтАЩt be able to attend because I come back from Seattle the same day in the morning. Nevertheless I promise you while I am in Seattle IтАЩll try to have a beer with some of these guys. From here IтАЩd like to congratulate the rest of the winners (there are 29 in all categories) and thank all my colleagues. Hey people, youтАЩre great! Kind regards from Andorra, ","date":"2012-02-16","objectID":"/amazing.-mvp-of-the-year-2011/:1:0","tags":["Microsoft","MVP"],"title":"Amazing: Awarded MVP of the Year!","uri":"/amazing.-mvp-of-the-year-2011/"},{"categories":["Development","Fundamentals"],"content":"Introduction Programmers are procrastinators. Get in, get some coffee, check the mailbox, read the RSS feeds, read the news, check out latest articles on techie websites, browse through political discussions on the designated sections of the programming forums. Rinse and repeat to make sure nothing is missed. Go to lunch. Come back, stare at the IDE for a few minutes. Check the mailbox. Get some coffee. Before you know it, the day is over. The only thing, every once in a while challenging articles actually do pop up. If youтАЩre looking at the right places youтАЩll find at least one of these every couple of days. These articles are hard to get through and take some time, so they start piling up. Before you know it, you have a list of links and a folder full of PDF files and you wish you had a year in a small hut in the middle of the forest with nobody around for miles so you could catch up. Would be nice if someone came in every morning while youтАЩre taking a walk down the river to bring some food and take out the garbage. I donтАЩt know about your list, but a large chunk of the articles in mine are about functional programming. These generally are the hardest to get through. Written in a dry academic language, even the тАЬten year Wall Street industry veteransтАЭ donтАЩt understand what functional programming (also referred to as FP) articles are all about. If you ask a project manager in Citi Group or in Deutsche Bank1 why they chose to use JMS instead of Erlang theyтАЩll say they canтАЩt use academic languages for industrial strength applications. The problem is, some of the most complex systems with the most rigid requirements are written using functional programming elements. Something doesnтАЩt add up. ItтАЩs true that FP articles and papers are hard to understand, but they donтАЩt have to be. The reasons for the knowledge gap are purely historical. There is nothing inherently hard about FP concepts. Consider this article тАЬan accessible guide to FPтАЭ, a bridge from our imperative minds into the world of FP. Grab a coffee and keep on reading. With any luck your coworkers will start making fun of you for your FP comments in no time. So what is FP? How did it come about? Is it edible? If itтАЩs as useful as its advocates claim, why isnтАЩt it being used more often in the industry? Why is it that only people with PhDs tend to use it? Most importantly, why is it so damn hard to learn? What is all this closure, continuation, currying, lazy evaluation and no side effects business? How can it be used in projects that donтАЩt involve a university? Why does it seem to be so different from everything good, and holy, and dear to our imperative hearts? WeтАЩll clear this up very soon. LetтАЩs start with explaining the reasons for the huge gap between the real world and academic articles. The answer is as easy as taking a walk in the park. ","date":"2012-02-10","objectID":"/functional-programming-for-the-rest-of-us/:1:0","tags":["Functional","Programming","Lambda","History"],"title":"Functional Programming For The Rest of Us","uri":"/functional-programming-for-the-rest-of-us/"},{"categories":["Development","Fundamentals"],"content":"A Walk In The Park Fire up the time machine. Our walk in the park took place more than two thousand years ago, on a beautiful sunny day of a long forgotten spring in 380 B.C. Outside the city walls of Athens, under the pleasant shade of olive trees Plato was walking towards the Academy with a beautiful slave boy. The weather was lovely, the dinner was filling, and the conversation turned to philosophy. тАЬLook at these two studentsтАЭ, said Plato carefully picking words to make the question educational. тАЬWho do you think is taller?тАЭ The slave boy looked towards the basin of water where two men were standing. тАЬTheyтАЩre about the same heightтАЭ, he said. тАЬWhat do you mean тАШabout the sameтАЩ?тАЭ, asked Plato. тАЬWell, they look the same from here but IтАЩm sure if I were to get closer IтАЩd see that there is some difference.тАЭ Plato smiled. He was leading the boy in the right direction. тАЬSo you would say that there is nothing perfectly equal in our world?тАЭ After some thinking the boy replied: тАЬI donтАЩt think so. Everything is at least a little different, even if we canтАЩt see it.тАЭ The point hit home! тАЬThen if nothing is perfectly equal in this world, how do you think you understand the concept of тАШperfectтАЩ equality?тАЭ The slave boy looked puzzled. тАЬI donтАЩt knowтАЭ, he replied. So was born the first attempt to understand the nature of mathematics. Plato suggested that everything in our world is just an approximation of perfection. He also realized that we understand the concept of perfection even though we never encountered it. He came to conclusion that perfect mathematical forms must live in another world and that we somehow know about them by having a connection to that тАЬalternativeтАЭ universe. ItтАЩs fairly clear that there is no perfect circle that we can observe. But we also understand what a perfect circle is and can describe it via equations. What is mathematics, then? Why is the universe described with mathematical laws? Can all of the phenomena of our universe be described by mathematics?2 Philosophy of mathematics is a very complex subject. Like most philosophical disciplines it is far more adept at posing questions rather than providing answers. Much of the consensus revolves around the fact that mathematics is really a puzzle: we set up a set of basic non-conflicting principles and a set of rules on how to operate with these principles. We can then stack these rules together to come up with more complex rules. Mathematicians call this method a тАЬformal systemтАЭ or a тАЬcalculusтАЭ. We can effectively write a formal system for Tetris if we wanted to. In fact, a working implementation of Tetris is a formal system, just specified using an unusual representation. A civilization of furry creatures on Alpha Centauri would not be able to read our formalisms of Tetris and circles because their only sensory input might be an organ that senses smells. They likely will never find out about the Tetris formalism, but they very well might have a formalism for circles. We probably wouldnтАЩt be able to read it because our sense of smell isnтАЩt that sophisticated, but once you get past the representation of the formalism (via various sensory instruments and standard code breaking techniques to understand the language), the concepts underneath are understandable to any intelligent civilization. Interestingly if no intelligent civilization ever existed in the universe the formalisms for Tetris and circles would still hold water, itтАЩs just that nobody would be around to find out about them. If an intelligent civilization popped up, it would likely discover some formalisms that help describe the laws of our universe. They also would be very unlikely to ever find out about Tetris because there is nothing in the universe that resembles it. Tetris is one of countless examples of a formal system, a puzzle, that has nothing to do with the real world. We canтАЩt even be sure that natural numbers have full resemblance to the real world, after all one can easily think of a number s","date":"2012-02-10","objectID":"/functional-programming-for-the-rest-of-us/:2:0","tags":["Functional","Programming","Lambda","History"],"title":"Functional Programming For The Rest of Us","uri":"/functional-programming-for-the-rest-of-us/"},{"categories":["Development","Fundamentals"],"content":"A Bit of History LetтАЩs shift gears in our time machine. This time weтАЩll travel a lot closer, to the 1930s. The Great Depression was ravaging the New and the Old worlds. Almost every family from every social class was affected by the tremendous economic downturn. Very few sanctuaries remained where people were safe from the perils of poverty. Few people were fortunate enough to be in these sanctuaries, but they did exist. Our interest lies in mathematicians in Princeton University. The new offices constructed in gothic style gave Princeton an aura of a safe haven. Logicians from all over the world were invited to Princeton to build out a new department. While most of America couldnтАЩt find a piece of bread for dinner, high ceilings, walls covered with elaborately carved wood, daily discussions by a cup of tea, and walks in the forest were some of the conditions in Princeton. One mathematician living in such lavish lifestyle was a young man named Alonzo Church. Alonzo received a B.S. degree from Princeton and was persuaded to stay for graduate school. Alonzo felt the architecture was fancier than necessary. He rarely showed up to discuss mathematics with a cup of tea and he didnтАЩt enjoy the walks in the woods. Alonzo was a loner: he was most productive when working on his own. Nevertheless Alonzo had regular contacts with other Princeton inhabitants. Among them were Alan Turing, John von Neumann, and Kurt G├╢del. The four men were interested in formal systems. They didnтАЩt pay much heed to the physical world, they were interested in dealing with abstract mathematical puzzles instead. Their puzzles had something in common: the men were working on answering questions about computation. If we had machines that had infinite computational power, what problems would we be able to solve? Could we solve them automatically? Could some problems remain unsolved and why? Would various machines with different designs be equal in power? In cooperation with other men Alonzo Church developed a formal system called lambda calculus. The system was essentially a programming language for one of these imaginary machines. It was based on functions that took other functions as parameters and returned functions as results. The function was identified by a Greek letter lambda, hence the systemтАЩs name4. Using this formalism Alonzo was able to reason about many of the above questions and provide conclusive answers. Independently of Alonzo Church, Alan Turing was performing similar work. He developed a different formalism (now referred to as the Turing machine), and used it to independently come to similar conclusions as Alonzo. Later it was shown that Turing machines and lambda calculus were equivalent in power. This is where the story would stop, IтАЩd wrap up the article, and youтАЩd navigate to another page, if not for the beginning of World War II. The world was in flames. The U.S. Army and Navy used artillery more often than ever. In attempts to improve accuracy the Army employed a large group of mathematicians to continuously calculate differential equations required for solving ballistic firing tables. It was becoming obvious that the task was too great for being solved manually and various equipment was developed in order to overcome this problem. The first machine to solve ballistic tables was a Mark I built by IBM - it weighed five tons, had 750,000 parts and could do three operations per second. The race, of course, wasnтАЩt over. In 1949 an Electronic Discrete Variable Automatic Computer (EDVAC) was unveiled and had tremendous success. It was a first example of von NeumannтАЩs architecture and was effectively a real world implementation of a Turing machine. For the time being Alonzo Church was out of luck. In late 1950s an MIT professor John McCarthy (also a Princeton graduate) developed interest in Alonzo ChurchтАЩs work. In 1958 he unveiled a List Processing language (Lisp). Lisp was an implementation of AlonzoтАЩs lambda calculus that worked on von Neuman","date":"2012-02-10","objectID":"/functional-programming-for-the-rest-of-us/:3:0","tags":["Functional","Programming","Lambda","History"],"title":"Functional Programming For The Rest of Us","uri":"/functional-programming-for-the-rest-of-us/"},{"categories":["Development","Fundamentals"],"content":"Functional Programming Functional programming is a practical implementation of Alonzo ChurchтАЩs ideas. Not all lambda calculus ideas transform to practice because lambda calculus was not designed to work under physical limitations. Therefore, like object oriented programming, functional programming is a set of ideas, not a set of strict guidelines. There are many functional programming languages, and most of them do many things very differently. In this article I will explain the most widely used ideas from functional languages using examples written in Java (yes, you could write functional programs in Java if you felt particularly masochistic). In the next couple of sections weтАЩll take Java as is, and will make modifications to it to transform it into a useable functional language. LetтАЩs begin our quest. Like this post? Continue reading the original post in Slava AkhmechetтАЩs blog ","date":"2012-02-10","objectID":"/functional-programming-for-the-rest-of-us/:4:0","tags":["Functional","Programming","Lambda","History"],"title":"Functional Programming For The Rest of Us","uri":"/functional-programming-for-the-rest-of-us/"},{"categories":["Software"],"content":"The issue After a long timeтАж here we go again! Today a quick post, just a note: If you bought a MacBook Pro and using Boot Camp for running Windows, you may be possible experiment some chipset problems. In my particular case with USB and bluetooth devices (Wireless Notebook Presenter 8000), and a couple of window-freezed. Also, in some ocasions Windows threw an error: тАЬIntel 5 Series/3400 Series Chipset Family USB Universal Host Controller тАУ 3B3B (and 3B36) has a driver problemтАЭ. Chipset issues on Windows ","date":"2011-04-07","objectID":"/macbook-pro-series-3400-series-chipset-problems/:1:0","tags":["Apple","Boot Camp","MacBook Pro","Drivers","Chipset","Windows"],"title":"Macbook Pro - Series 3400 series chipset problems?","uri":"/macbook-pro-series-3400-series-chipset-problems/"},{"categories":["Software"],"content":"How to fix it After googling 10 minutes I just realized that lots of people are experimenting the same trouble, and I would like to show how to solve it in 3 simple steps: Open Windows Device Manager Show all devices (including hide devices, View menu) Disable both devices (3B3B \u0026 3B36) ThatтАЩs all! :-D Hope you enjoy this. ","date":"2011-04-07","objectID":"/macbook-pro-series-3400-series-chipset-problems/:2:0","tags":["Apple","Boot Camp","MacBook Pro","Drivers","Chipset","Windows"],"title":"Macbook Pro - Series 3400 series chipset problems?","uri":"/macbook-pro-series-3400-series-chipset-problems/"},{"categories":["Development","How To"],"content":"The scenario In business applications itтАЩs very common checking if the current user is member of the тАШdomain administratorsтАЩ role of your company. For example, recently I had to check if the current user has administrative privileges in order to show some advanced configuration options. ","date":"2010-12-13","objectID":"/check-current-user-is-domain-admin/:1:0","tags":["csharp","net framework","API","Win32","Active Directory","Domain","Administrator"],"title":"Check if current user is domain administrator","uri":"/check-current-user-is-domain-admin/"},{"categories":["Development","How To"],"content":"IsInRole To acomplish this we could use the IsInRole method from the WindowsPrincipal class. This method checks if an user is member of a Windows role and returns a bool value. One of its overrides allows to pass the SID of the role or a constant value based on the enumeration WindowsBuiltInrole. Note: For performance reasons, itтАЩs recommended to use the override: IsinRole(SecurityIdentifier). To check if current user is an administrator on the local computer we only need to do this: var wp = new WindowsPrincipal(WindowsIdentity.GetCurrent()); return wp.IsInRole(WindowsBuiltInRole.Administrator); Notice that itтАЩs realy easy, but WindowsBuiltInrole enumeration only contains local roles. So, if we would check if our user is member of a domain group, we should find the role SID in our domain. ","date":"2010-12-13","objectID":"/check-current-user-is-domain-admin/:1:1","tags":["csharp","net framework","API","Win32","Active Directory","Domain","Administrator"],"title":"Check if current user is domain administrator","uri":"/check-current-user-is-domain-admin/"},{"categories":["Development","How To"],"content":"WellKnownSidType LetтАЩs take a look at the following enumeration WellKnownSidType, this enumeration provides commonly used security identifiers and thatтАЩs exactly whan we want. LetтАЩs try to use it in our code: var wp = new WindowsPrincipal(WindowsIdentity.GetCurrent()); var sid = new SecurityIdentifier(WellKnownSidType.AccountDomainAdminsSid, null); return wp.IsInRole(sid); Boom! DoтАЩh! It seems that we need to pass the second argument called DomainSId, which represents the security identifier of your company domain. ","date":"2010-12-13","objectID":"/check-current-user-is-domain-admin/:1:2","tags":["csharp","net framework","API","Win32","Active Directory","Domain","Administrator"],"title":"Check if current user is domain administrator","uri":"/check-current-user-is-domain-admin/"},{"categories":["Development","How To"],"content":"DomainSid This domain SID is required for some WellKnownSidType values and we can get it using the DirectoryEntry class from the assembly System.DirectoryServices. var domain = Domain.GetDomain(new DirectoryContext( DirectoryContextType.Domain, IPGlobalProperties.GetIPGlobalProperties().DomainName)); using (DirectoryEntry de = domain.GetDirectoryEntry()) { var domainSIdArray = (byte[])de.Properties[\"objectSid\"].Value; var domainSId = new SecurityIdentifier(domainSIdArray, 0); } First, we obtain a reference to the domain using the domain name. Then get of the value the property objectSid as a byte array, and finally transform this value into a valid SecurityIdentifier which is what we need. ","date":"2010-12-13","objectID":"/check-current-user-is-domain-admin/:1:3","tags":["csharp","net framework","API","Win32","Active Directory","Domain","Administrator"],"title":"Check if current user is domain administrator","uri":"/check-current-user-is-domain-admin/"},{"categories":["Development","How To"],"content":"Show me the code Putting it all together. Like my collegue and friend @alegrebandolero IтАЩm also a fan of extension methods. So, letтАЩs create an extension method for the WindowsIdentity class: public static bool IsDomainAdmin(this WindowsIdentity identity) { var domain = Domain.GetDomain(new DirectoryContext( DirectoryContextType.Domain, IPGlobalProperties.GetIPGlobalProperties().DomainName)); using (DirectoryEntry de = domain.GetDirectoryEntry()) { var domainSIdArray = (byte[])de.Properties[\"objectSid\"].Value; var domainSId = new SecurityIdentifier(domainSIdArray, 0); var domainAdminsSId = new SecurityIdentifier( WellKnownSidType.AccountDomainAdminsSid, domainSId); var wp = new WindowsPrincipal(identity); return wp.IsInRole(domainAdminsSId); } } ThatтАЩs all. Now, use it as follows: if(WindowsIdentity.GetCurrent().IsDomainAdmin()) { //some code here... } Edit 12/14/2010: Since Windows Vista each Windows user have a couple of security tokens. The first one is the normal token with limited privileges, and the second one only works when you тАШrun as administratorтАЩ. This code only works if you are using the second token, running the application as administrator. HYEI, happy coding! December 2010 ","date":"2010-12-13","objectID":"/check-current-user-is-domain-admin/:2:0","tags":["csharp","net framework","API","Win32","Active Directory","Domain","Administrator"],"title":"Check if current user is domain administrator","uri":"/check-current-user-is-domain-admin/"},{"categories":["Development","How To"],"content":"Gettings all controls from a container v2 ","date":"2010-11-15","objectID":"/retrieve-all-controls-using-generics-ii/:1:0","tags":["csharp","net framework","generics","LINQ"],"title":"Retrieve all controls using generics (II)","uri":"/retrieve-all-controls-using-generics-ii/"},{"categories":["Development","How To"],"content":"A better approach In my previous post I created a recursive function to retrieve all controls inside a form and its containers. Today, my colleague and friend Eduard Tom├аs sent me another solution to the same topic based on LINQ. ItтАЩs simply and really, really pretty тЭдя╕П ","date":"2010-11-15","objectID":"/retrieve-all-controls-using-generics-ii/:1:1","tags":["csharp","net framework","generics","LINQ"],"title":"Retrieve all controls using generics (II)","uri":"/retrieve-all-controls-using-generics-ii/"},{"categories":["Development","How To"],"content":"The power of LINQ Before starting, we need to solve this: LINQ works over IEnumerable, but Control.Controls property returns a ControlCollection type. In fact, nowadays, since we have Generics this class has no sense (like other 1.000 similar classes) but remember that Generics doesnтАЩt appeared until .NET Framework 2.0. So, our first step will be retrieve an IEnumerable from a ControlCollection property of a Control. This could be accomplished using an extensor method over the class ControlCollection: public static IEnumerable\u003cControl\u003e AsEnumerable(this Control.ControlCollection @this) { foreach (var control in @this) yield return (Control)control; } Note that using this method we are able to transform CollectionControl to IEnumerable and get full access to the power of Linq. Now, letтАЩs create a method to retrieve all controls of a type: public static IEnumerable\u003cT\u003e GetAllControls\u003cT\u003e(this Control @this) where T : Control { return @this.Controls.AsEnumerable().Where( x =\u003e x.GetType() == typeof(T)).Select( y =\u003e (T)y).Union( @this.Controls.AsEnumerable().SelectMany( x =\u003e GetAllControls\u003cT\u003e(x)).Select(y =\u003e (T)y)); } It looks cool, isnтАЩt it? No loops, no ifsтАж only pure LINQ power! :-) Note that converting Controls property into an Enumerable allow us to use all those IEnumerable LINQ methods like Select, Where, Union or SelectManyтАж in just a single line of code! This is amazing, this is functional programming style! ","date":"2010-11-15","objectID":"/retrieve-all-controls-using-generics-ii/:1:2","tags":["csharp","net framework","generics","LINQ"],"title":"Retrieve all controls using generics (II)","uri":"/retrieve-all-controls-using-generics-ii/"},{"categories":["Development","How To"],"content":"Applying several actions ThereтАЩs also a small difference with my original solution. In the previous one I used an internal List to copy all controls references. The new one only iterates over the original collection. ThereтАЩs no internal lists. Another difference present┬аin LINQ solution is we are returning an IEnumerable, so we loose the ForEach method (because IEnumerable doesnтАЩt implements this method). But building our own ForEach method is as trivial as: public static void ForEach\u003cT\u003e(this IEnumerable\u003cT\u003e @this, Action\u003cT\u003e action) { foreach (T t in @this) { action(t); } } Now, weтАЩve all the necessary ingredients to get all controls and do whatever we need :D this.GetAllControls\u003cTextBox\u003e().ForEach(p =\u003e p.Enabled = false); this.GetAllControls\u003cTextBox\u003e().ForEach(p =\u003e { p.BackColor = Color.LightGray; p.ForeColor = Color.Red; p.Text = \"hello\"; p.TextAlign = HorizontalAlignment.Center; }); HYEI, happy coding! :-) November 2010 ","date":"2010-11-15","objectID":"/retrieve-all-controls-using-generics-ii/:1:3","tags":["csharp","net framework","generics","LINQ"],"title":"Retrieve all controls using generics (II)","uri":"/retrieve-all-controls-using-generics-ii/"},{"categories":["Development","How To"],"content":"Gettings all controls from a container ","date":"2010-11-09","objectID":"/retrieve-all-controls-using-generics-i/:1:0","tags":["csharp","net framework","generics"],"title":"Retrieve all controls using generics (I)","uri":"/retrieve-all-controls-using-generics-i/"},{"categories":["Development","How To"],"content":"ThatтАЩs the question How many times have you ever heard something similar? :) How to clear the content of all the textboxes in a form? The question may vary a littles bit but itтАЩs always related to obtain all controls of a determined type (Button TextBox, etc) in a form or maybe in another type of container like a Panel or user control. ","date":"2010-11-09","objectID":"/retrieve-all-controls-using-generics-i/:1:1","tags":["csharp","net framework","generics"],"title":"Retrieve all controls using generics (I)","uri":"/retrieve-all-controls-using-generics-i/"},{"categories":["Development","How To"],"content":"Generics and Extension methods Using generics itтАЩs really easy! Firstly letтАЩs create an extensor method, that returns a collection of all the controls of a type in a Form or container. And then, we will use this collection to do an action over each returned item. The extensor method public static List\u003cT\u003e GetControls\u003cT\u003e(this Control container) where T : Control { List\u003cT\u003e controls = new List\u003cT\u003e(); foreach (Control c in container.Controls) { if (c is T) controls.Add((T)c); controls.AddRange(GetControls\u003cT\u003e(c)); } return controls; } This method retrieves the collection of Controls from a container calling it itself recursively, retrieving the content of all his containers. How to use it? this.GetControls\u003cTextBox\u003e().ForEach(p =\u003e p.Text = string.Empty); We can use the extensor method directly into a form because Form class inherits from ContainerControl, that inherits from ScrollableControl, and ScrollableControl from Control. Or, in other words, our Form will implement our extensor method. So, at compile time we should specify the type of the controls we want to retrieve. In the example we are using TextBox, but you can use Button type instead. And then, use ForEach to apply an action on each one of the items returned. Moreover, if we want to retrieve only the controls into a container (GroupBox, Panel, TabControl or another that inherits from Control), you can call the method for this particular control. myPanel.GetControls\u003cButton\u003e().ForEach(p =\u003e p.Enabled = false); Applying several actions In most cases, we would apply several actions to each control (not only one). In this case itтАЩs quite easy: The only thing we have to do is create a method that receives a parameter of this type, and call it passing the control as an argument: this.GetControls\u003cTextBox\u003e().ForEach(p =\u003e ApplyFormat(p)); private void ApplyFormat(TextBox text) { text.BackColor = Color.LightGray; text.ForeColor = Color.Red; text.Text = \"hello\"; text.TextAlign = HorizontalAlignment.Center; } Or maybe, using an тАШaction delegateтАЩ, both options are correct: this.GetControls\u003cTextBox\u003e().ForEach(p =\u003e { p.BackColor = Color.LightGray; p.ForeColor = Color.Red; p.Text = \"hello\"; p.TextAlign = HorizontalAlignment.Center; }); Happy coding! :-) November 2010 ","date":"2010-11-09","objectID":"/retrieve-all-controls-using-generics-i/:1:2","tags":["csharp","net framework","generics"],"title":"Retrieve all controls using generics (I)","uri":"/retrieve-all-controls-using-generics-i/"},{"categories":["Development","How To"],"content":"Tables Tables Are Cool col 1 is left-aligned $1600 col 2 is centered $12 col 3 is right-aligned $1 ","date":"1999-06-26","objectID":"/ztemplate-copy/:1:0","tags":["csharp","net framework","Tip","SQL"],"title":"Extended shortcodes","uri":"/ztemplate-copy/"},{"categories":["Development","How To"],"content":"Gist ","date":"1999-06-26","objectID":"/ztemplate-copy/:2:0","tags":["csharp","net framework","Tip","SQL"],"title":"Extended shortcodes","uri":"/ztemplate-copy/"},{"categories":["Development","How To"],"content":"Admonition admon samples This is a bug A tip banner Or This is a tip A tip banner ","date":"1999-06-26","objectID":"/ztemplate-copy/:3:0","tags":["csharp","net framework","Tip","SQL"],"title":"Extended shortcodes","uri":"/ztemplate-copy/"},{"categories":["Development","How To"],"content":"Mermaid mermaid samples ","date":"1999-06-26","objectID":"/ztemplate-copy/:4:0","tags":["csharp","net framework","Tip","SQL"],"title":"Extended shortcodes","uri":"/ztemplate-copy/"},{"categories":["Development","How To"],"content":"Flow ","date":"1999-06-26","objectID":"/ztemplate-copy/:4:1","tags":["csharp","net framework","Tip","SQL"],"title":"Extended shortcodes","uri":"/ztemplate-copy/"},{"categories":["Development","How To"],"content":"Gaant ","date":"1999-06-26","objectID":"/ztemplate-copy/:4:2","tags":["csharp","net framework","Tip","SQL"],"title":"Extended shortcodes","uri":"/ztemplate-copy/"},{"categories":["Development","How To"],"content":"git ","date":"1999-06-26","objectID":"/ztemplate-copy/:4:3","tags":["csharp","net framework","Tip","SQL"],"title":"Extended shortcodes","uri":"/ztemplate-copy/"},{"categories":["Development","How To"],"content":"pie ","date":"1999-06-26","objectID":"/ztemplate-copy/:4:4","tags":["csharp","net framework","Tip","SQL"],"title":"Extended shortcodes","uri":"/ztemplate-copy/"},{"categories":["Development","How To"],"content":"eCharts echarts samples Line chart Map ","date":"1999-06-26","objectID":"/ztemplate-copy/:5:0","tags":["csharp","net framework","Tip","SQL"],"title":"Extended shortcodes","uri":"/ztemplate-copy/"}]
=======
[{"categories":null,"content":"Bio Father. Husbsand. Pastafari. The one who loves developing software. Manufactured in 1971 in Barcelona (Spain) Programming things for the last 30+ years. In love with C#, Java, SQL, software architecture, async patterns \u0026 more. Ex-teacher, Blogger, Speaker, Geek \u0026 family guy, living in Andorra since 2001. Microsoft MVP 2002-2016, MAP, MCC Active member and moderator in the good old MS newsgroups and forums for almost two decades. Founder of AndorraDotNet, the first dotNet user group in the country. Host of several events, like Geek-a-palooza. Now in a well deserved retirement ","date":"2020-05-01","objectID":"/about/:1:0","tags":null,"title":"About me","uri":"/about/"},{"categories":null,"content":"I like Coding. Family. Mountains. Sports. Food. Nature. Feminism. Human rights. Scifi. Fantasy. Traveling. Science. Atheism. ","date":"2020-05-01","objectID":"/about/:2:0","tags":null,"title":"About me","uri":"/about/"},{"categories":null,"content":"I dislike Anti-vaxxers. Racism. Religious fundamentalists. Pseudoscience. Lack of imagination or proud on ignorance. Politicians. ","date":"2020-05-01","objectID":"/about/:3:0","tags":null,"title":"About me","uri":"/about/"},{"categories":null,"content":"Tech profile Languages and technologies IтАЩve learnt through the years. Language/Technology Start End Expertise Basic 1983 1988 тнРтнРтнРтнРтнР Assembler 1986 1986 тнР C 1990 1997 тнРтнРтнРтнР C++ 1992 2000 тнРтнРтнР Pascal 1992 1994 тнРтнРтнР ObjectPal 1994 1994 тнР Visual Basic 1994 2002 тнРтнРтнРтнРтнР SQL (TSQL/PS-SQL) 1994 - тнРтнРтнРтнРтнР Clipper 1998 1999 тнРтнРтнР Delphi 1998 2002 тнРтнРтнРтнР Java 1998 2004 тнРтнРтнРтнР ActionScript 1999 1999 тнР Visual Basic.NET 2002 2010 тнРтнРтнРтнРтнР C# 2002 - тнРтнРтнРтнРтнР Javascript 2008 - тнРтнРтнР F# 2012 2012 тнРтнР Typescript 2018 2018 тнРтнР CSS 2018 - тнРтнР Python 2019 - тнРтнР Go 2020 - тнР ","date":"2020-05-01","objectID":"/about/:4:0","tags":null,"title":"About me","uri":"/about/"},{"categories":null,"content":"Who am I? Speaking at dotnet conference View this post on Instagram A post shared by Lluis Franco (@francolluis) on Jan 1, 2019 at 1:12pm PST View this post on Instagram A post shared by Lluis Franco (@francolluis) on Jul 14, 2018 at 11:19am PDT View this post on Instagram A post shared by Lluis Franco (@francolluis) on Aug 19, 2018 at 1:30pm PDT View this post on Instagram A post shared by Lluis Franco (@francolluis) on Feb 12, 2018 at 6:36am PST View this post on Instagram A post shared by Lluis Franco (@francolluis) on Aug 9, 2019 at 12:43am PDT View this post on Instagram A post shared by Lluis Franco (@francolluis) on Aug 9, 2019 at 12:38am PDT View this post on Instagram A post shared by Lluis Franco (@francolluis) on Mar 2, 2019 at 5:43am PST ","date":"2020-05-01","objectID":"/about/:5:0","tags":null,"title":"About me","uri":"/about/"},{"categories":["Development","How To"],"content":"Overview When executing some long-running server side processes on a SQL Server (Stored procedures or functions) would be nice to get progress messages, and why not, a percent value in order to show a progress bar in our application. In the past IтАЩve used different techniques to archive this, from SQL Assemblies for calling a SignalR server, to execute xp_cmdshell, and so many other esoteric ways. None of that solved the problem in an elegant way, but well, it workedтАж more or lessтАж ","date":"2019-09-30","objectID":"/retrieving-events-from-sql-server/:1:0","tags":["csharp","net framework","SQL","SQL Server","Events"],"title":"Retrieving events from SQL Server","uri":"/retrieving-events-from-sql-server/"},{"categories":["Development","How To"],"content":"Changing the point of view Today I noticed the SqlConnection class has an InfoMessage event, and it can be used for тАЬClients that want to process warnings or informational messages sent by the serverтАЭ which is EXACTLY what I was looking for. Processing SQL events It looks promising but, how can I trigger an error from my SQL? If you are a TSQL programmer you surely know RAISERROR, which generates an error message in a similar way the throw C# keyword does. The trick here is its severity argument: It indicates the type of problem encountered by SQL Server, and values under 10 indicate that these errors are not severe. Just warnings or information that SQL server sends to anyone is listening. And whoтАЩs listening? You can imagine ЁЯШД ","date":"2019-09-30","objectID":"/retrieving-events-from-sql-server/:2:0","tags":["csharp","net framework","SQL","SQL Server","Events"],"title":"Retrieving events from SQL Server","uri":"/retrieving-events-from-sql-server/"},{"categories":["Development","How To"],"content":"Show me the code LetтАЩs imagine weтАЩve this long-running stored procedure in our database. WeтАЩre using WAITFOR DELAY for simulating intensive processing. ","date":"2019-09-30","objectID":"/retrieving-events-from-sql-server/:3:0","tags":["csharp","net framework","SQL","SQL Server","Events"],"title":"Retrieving events from SQL Server","uri":"/retrieving-events-from-sql-server/"},{"categories":["Development","How To"],"content":"SQL Script CREATE PROCEDURE [dbo].[TestLongRunningSP] AS BEGIN RAISERROR('1) Starting', 0, 0) WITH NOWAIT; WAITFOR DELAY '00:00:03'; --Wait for 3 seconds RAISERROR('2) Fetching data', 0, 0) WITH NOWAIT; WAITFOR DELAY '00:00:05'; --Wait for 5 seconds RAISERROR('3) Some other actions', 0, 0) WITH NOWAIT; WAITFOR DELAY '00:00:03'; --Wait for 3 seconds RAISERROR('4) Calculating', 0, 0) WITH NOWAIT; WAITFOR DELAY '00:00:02'; --Wait for 2 seconds RAISERROR('5) Finishing', 0, 0) WITH NOWAIT; END Thanks to RAISEERROR when executing this stored procedure we will show this output. 1) Starting 2) Fetching data 3) Some other actions 4) Calculating 5) Finishing Completion time: 2019-09-30T09:33:28.4952150+02:00 Now letтАЩs create some C# code: ","date":"2019-09-30","objectID":"/retrieving-events-from-sql-server/:3:1","tags":["csharp","net framework","SQL","SQL Server","Events"],"title":"Retrieving events from SQL Server","uri":"/retrieving-events-from-sql-server/"},{"categories":["Development","How To"],"content":"C# code First: A class to send the received messages from our repository to its consumer, which in this case the UI will be just a Windows Form (good old boys never die). public class SqlMessageEventArgs { public string Message { get; set; } public int Progress { get; set; } } Notice the Progress property. We will use it later in the last part of the post, be patient ЁЯШП Second: A repository class that open a connection, execute the stored procedure and send messages using a ProcessMessage event. We must explicitly enable the connection to receive these errors and raise handling the InfoMessage event: public class SqlServerRepo { public event EventHandler\u003cSqlMessageEventArgs\u003e ProcessMessage; public string ConnectionString { get; internal set; } public SynchronizationContext SyncContext { get; internal set; } public async Task GetDataAsync() { using (var con = new SqlConnection(ConnectionString)) { con.FireInfoMessageEventOnUserErrors = true; con.InfoMessage += (s, e) =\u003e SyncContext.Post(_ =\u003e ProcessMessage?.Invoke( s, new SqlMessageEventArgs { Message = e.Message, }), null); con.Open(); var sql = \"EXEC dbo.TestLongRunningSP\"; var commandDefinition = new CommandDefinition(sql); await con.ExecuteAsync(commandDefinition); con.Close(); } } } When using async pattern the received messages come from a different thread and cannot be used to update the UI directly. For this reason I always recommend send to the Repo the current synchronization context and use this Context to post to the main thread. Cross thread exception when updating UI from a different thread. Third: Finally letтАЩs create a simple Windows Form with just a button, a progress bar and a list box). const string connectionstring = \"Data Source=YOUR_SERVER;\" + \"Initial Catalog=YOUR_DATABASE;\" + \"Integrated Security=True;\"; private async void button1_Click(object sender, EventArgs e) { var repo = new SqlServerRepo() { ConnectionString = connectionstring, SyncContext = SynchronizationContext.Current }; repo.ProcessMessage += (ms, me) =\u003e { listBoxLog.Items.Add($\"{DateTime.Now} - {me.Message}\"); }; await repo.GetDataAsync(); listBoxLog.Items.Add($\"Finished Process!\"); } This code creates the repo, pass the connection string and the current synchronization context, handles the ProcessMessage event and invoke the GetDataAsync method. Simply and elegant. No dependent assemblies or external resources. ","date":"2019-09-30","objectID":"/retrieving-events-from-sql-server/:3:2","tags":["csharp","net framework","SQL","SQL Server","Events"],"title":"Retrieving events from SQL Server","uri":"/retrieving-events-from-sql-server/"},{"categories":["Development","How To"],"content":"One more thing What about the progress bar? Just use the state argument of the RAISERROR method on the SP like this: CREATE PROCEDURE [dbo].[TestLongRunningSP] AS BEGIN RAISERROR('1) Starting', 0, 10) WITH NOWAIT; WAITFOR DELAY '00:00:03'; --Wait for 3 seconds RAISERROR('2) Fetching data', 0, 30) WITH NOWAIT; WAITFOR DELAY '00:00:05'; --Wait for 5 seconds RAISERROR('3) Some other actions', 0, 60) WITH NOWAIT; WAITFOR DELAY '00:00:03'; --Wait for 3 seconds RAISERROR('4) Calculating', 0, 70) WITH NOWAIT; WAITFOR DELAY '00:00:02'; --Wait for 2 seconds RAISERROR('5) Finishing', 0, 100) WITH NOWAIT; END Then update the GetDataAsync method: public async Task GetDataAsync() { using (var con = new SqlConnection(ConnectionString)) { con.FireInfoMessageEventOnUserErrors = true; con.InfoMessage += (s, e) =\u003e SyncContext.Post(_ =\u003e ProcessMessage?.Invoke( s, new SqlMessageEventArgs { Message = e.Message, Progress = e.Errors[0]?.State ?? 0 }), null); con.Open(); var sql = \"EXEC dbo.TestLongRunningSP\"; var commandDefinition = new CommandDefinition(sql); await con.ExecuteAsync(commandDefinition); con.Close(); } } And finally the code in the form: repo.ProcessMessage += (ms, me) =\u003e { listBoxLog.Items.Add($\"{DateTime.Now} - {me.Message}\"); progressBar.Value = me.Progress; }; And thatтАЩs all! Hope you enjoy it, and please, send me your thoughts about this solution. ","date":"2019-09-30","objectID":"/retrieving-events-from-sql-server/:3:3","tags":["csharp","net framework","SQL","SQL Server","Events"],"title":"Retrieving events from SQL Server","uri":"/retrieving-events-from-sql-server/"},{"categories":["Development","How To"],"content":"Overview Recently I had to read some data from different OLAP cubes and show this information in our application. This could be accomplished using ADOMD.NET client library, which is the multidimensional equivalent to the ADO.NET libraries. This library provides a set of classes (Connections, Commands and Readers) that allow developers to connect, query and get data from these multidimensional sources in the same way the classical ADO.NET library does. Maybe the easiest way to read data is using the class AdomdDataReader. This object retrieves a read-only, forward-only, flattened stream of data from an analytical data source. Also implements the IDataReader interface (like the good-old DataReader). In non dynamic scenarios, we developers, tend to use ORMs like NHibertate, EF or Dapper (my favorite), to translate data from our models to classes. But these ORMs doesnтАЩt support multidimensional sources, because after all, they are only supersets or extensions of the ADO.NET model and are based on this existing object model. So, our goal here will be replicate in a multidimensional environment the way Dapper allows you to connect to a server, read some data and (the most important part) return these data as a typed List of objects. ","date":"2017-12-12","objectID":"/getting-data-from-olap-cubes/:1:0","tags":["csharp","net framework","OLAP","ADOMD.NET","generics"],"title":"Getting data from OLAP cubes","uri":"/getting-data-from-olap-cubes/"},{"categories":["Development","How To"],"content":"Testing the query LetтАЩs see how it works before dig into the details: using (var conn = new AdomdConnection(connectionString)) { conn.Open(); var commandText = @\"SELECT { [Measures].[Gains Period], [Measures].[Gains YTD], [Measures].[Amount] } ON COLUMNS, [Valuation Dates Accumulated].[Hierarchy].[Year].Members ON ROWS FROM Accumulated Where ({ @PortfolioId })\"; var data = conn.Query\u003cMyResultDTO\u003e(commandText, new AdomdParameterMultipleValues\u003cint\u003e() { ParameterName = \"@PortfolioId\", MemberName = \"[Portfolios].[Port Code]\", Values = new List\u003cint\u003e() { 282, 185 } } ); conn.Close(); } First of all we have a SQL script (highligted lines above) that returns some sample data of 3 different measures year by year (gains in period, gains year-to-date and the amount of money). Sample data Our goal here is translate these data into a generic List of our own DTO: internal class MyResultDTO { [OLAPMemberNameAttribute(\"[Valuation Dates Accumulated].[Hierarchy].[Year].[MEMBER_CAPTION]\")] public string Year { get; set; } [OLAPMemberNameAttribute(\"[Measures].[Gains Period]\")] public decimal? GainsPeriod { get; set; } [OLAPMemberNameAttribute(\"[Measures].[Gains YTD]\")] public decimal? GainsYTD { get; set; } [OLAPMemberNameAttribute(\"[Measures].[Amount]\")] public decimal? Amount { get; set; } } EDIT (2018-12-11) : Added custom attribute to the post, used to decorate our DTO. public class OLAPMemberNameAttribute : System.Attribute { string _Description = string.Empty; public OLAPMemberNameAttribute(string description) { _Description = description; } public string Description { get { return _Description; } } } Notice that in C# properties can not contain spaces so we previously have to тАШmapтАЩ the DataReader column names into valid property names. The trick here is create an attribute for decorating each property with the equivalent column name in the reader. The magic here is inside the generic Query Method. This method is just an extension method of the AdomdConnection object (Dapper style) and itтАЩs mission will be: Replace the parameters in the command string тАЬтАжWhere ({ @PortfolioId })тАЭ Execute the command against a valid connection Transform the returned IDataReader into a List public static List\u003cT\u003e Query\u003cT\u003e( this AdomdConnection conn, string commandText, params object[] parameters) { var commandTextParameters = ReplaceCommandTextParameters(commandText, parameters); var cmd = new AdomdCommand(commandTextParameters, conn); var dr = cmd.ExecuteReader(); return dr.ToList\u003cT\u003e(); } Now letтАЩs focus on the third point and create another extension method of the IDataReader interface. This method will transform the returned result set into a generics List OMG dude! Code on interfaces? YesтАж IтАЩll burn in hell, I know it ЁЯШД public static List\u003cT\u003e ToList\u003cT\u003e(this IDataReader dr) { var list = new List\u003cT\u003e(); var obj = default(T); while (dr.Read()) { obj = Activator.CreateInstance\u003cT\u003e(); foreach (var prop in obj.GetType().GetProperties()) { var columnDescription = getPropertyDescription(obj, prop.Name); if (existsDataReaderColumn(dr, columnDescription)) copyColumnValueToProperty(dr, obj, prop); } list.Add(obj); } return list; } static void copyColumnValueToProperty\u003cT\u003e(IDataReader dr, T obj, PropertyInfo prop) { try { var columnDescription = getPropertyDescription(obj, prop.Name); var columnOrdinal = dr.GetOrdinal(columnDescription); var value = dr[columnOrdinal]; var canBeNull = !prop.PropertyType.IsValueType || (Nullable.GetUnderlyingType(prop.PropertyType) != null); var castToType = Nullable.GetUnderlyingType(prop.PropertyType) ?? prop.PropertyType; if (canBeNull \u0026\u0026 value == null) prop.SetValue(obj, null, null); else prop.SetValue(obj, Convert.ChangeType(value, castToType, CultureInfo.InvariantCulture), null); } catch { } } static bool existsDataReaderColumn(IDataReader dr, string propertyName) { try { var obj = dr[propertyName]; return true; } catch { return false; } } private static string getPropertyDescription(object value, string propname) { var propinfo = valu","date":"2017-12-12","objectID":"/getting-data-from-olap-cubes/:2:0","tags":["csharp","net framework","OLAP","ADOMD.NET","generics"],"title":"Getting data from OLAP cubes","uri":"/getting-data-from-olap-cubes/"},{"categories":["Development","How To"],"content":"Overview In these times of APIs-everywhere, it may sound like an anachronism the use SFTP to connect to a remote server and get a list of files for exchanging information, but in the financial world (sadly) itтАЩs more common than you think. In my current project IтАЩve to connect to a remote server via Secure File Transfer Protocol (aka SFTP) using a user name, a RSA private key and a phassphrase. Once connected, the goal is to read some files from a remote folder and download them to a local folder. To accomplish this I recommend you to use SSH.NET, one of the most popular SSH libraries for .NET, available on nuget. SSH.NET on NuGet More info about SSH.NET here. ","date":"2017-11-29","objectID":"/connect-via-sftp-using-ssh.net/:1:0","tags":["csharp","net framework","SFTP","SSH.NET"],"title":"Connect via SFTP using SSH.NET","uri":"/connect-via-sftp-using-ssh.net/"},{"categories":["Development","How To"],"content":"Connecting to the server The most difficult part here is configure the connection, as usual. We need to provide the server url and port, in combination with the username and a file that contains the private key of the RSA certificate, and -of course- the passphrase. HereтАЩs the final code, and it works :) private static void SFTP_Connect_And_Download_Sample() { var host = \"sftp_server_address.com\"; var port = 999; var username = \"your_username\"; var passphrase = \"your_passphrase\"; var privateKeyLocalFilePath = @\"your_localpath\\...\\PrivateKeyOpenSSH.ppk\"; var remoteFolderPath = \"/\"; var localFolferPath = @\"D:\\locafiles\\\"; var key = File.ReadAllText(privateKeyLocalFilePath); var buf = new MemoryStream(Encoding.UTF8.GetBytes(key)); var privateKeyFile = new PrivateKeyFile(buf, passphrase); var connectionInfo = new ConnectionInfo( host, port, username, new PrivateKeyAuthenticationMethod(username, privateKeyFile)); using (var client = new SftpClient(connectionInfo)) { client.Connect(); var files = client.ListDirectory(remoteFolderPath); foreach (var file in files) { Console.WriteLine(file); using (var targetFile = new FileStream( Path.Combine(localFolferPath, file.Name), FileMode.Create)) { client.DownloadFile(file.FullName, targetFile); targetFile.Close(); } } client.Disconnect(); } } Note Use the full path to your file in the privateKeyLocalFilePath variable. Take a look at the highlighted line (7). The key here is creating a file that contains the privateKey. I recommend you to use filezilla or similar to test the connection and save it to a file. Your file should looks something like this: PuTTY-User-Key-File-2: ssh-rsa Encryption: aes256-cbc Comment: rsa-key-KBL-20171006 Public-Lines: 6 AAB3NzaC1yc2EAAAJQAAAQEAnHp1CA4xF04ZdOQ/rsxJoW9fPJ2RD FgMNVIqsUsjeRbIoZ2y8SMD9b7MMB0lpKXgJ2dYDgOnh2q j4VTpEoI2JWh4NdQgSH0O+2oLmQnwgDPT7Kva095ggEQiqScX4+31aY02/nz mK86sxq/sUsW/UqgS+pPViRQLVzDXFf8XIYSSZngmV+Rk108BQ== Private-Lines: 14 khHfZWB0vBIFtKc4s98xGDFhwZNJQByUTtE7um0tcU4cwy1QTPf3GIuN vyhHxIGx3LBtFJqzbZVJtOJVSYjkBTGbNc62D0uJCxYVf8PUUStI6GbOkkyDW/Vt beWZ3s/DugsImjcbPxdEz/2X86uzd5U5v4/wGKQr8GWJtNksMcJ k7JgRYGA/t0cSE2980MxhZOBg2Gn7+0A6mWgSf2Rr7hpcqsou1 hmc1HYtN7Oj4WT7hvRt8ZAC3/ekTdJ4K3K7vKglSHoQ tnimHaanJHz4RGBb78Alllk+OYk3TN0Etcwod3401cLpjYYeq6veZLA/KfCHuiJ+ +Zqoy//NY9egfXd1hB0kmiemwO8wGfLS7ppS/WvPOknW9I8SNMllR1vmO3Hk6S3x KfAG03ZWNoKDLvAIUllNyMpf9p8oKLF2ny4bJKsfNtr4Y0ejQJUFkC uNz1S4VJ8j1fRcIjx4yT121B9BDfp486RUmnEgsOFEtmVyHPfNxYzDXq2MjTf4l/ MI5cKWHrDbDC/Cu3YvkF3gekLAb/j9Cie/feHmSnbuZ2VEr6zUt10yaH4hPejCOw FYDZb0I8xxxWJZ6BbpLWDqeD0Oiss8UnDhha/iKvodA9LIG0T VRlScvGvuzClGYkc7UIWIoARvdxp46YlGMu4mWGeVkNcrxXnmUkdKyNqGjAGJoK/ Private-MAC: d288fffe72914eb62ed60a7e50fd8ce775 ","date":"2017-11-29","objectID":"/connect-via-sftp-using-ssh.net/:2:0","tags":["csharp","net framework","SFTP","SSH.NET"],"title":"Connect via SFTP using SSH.NET","uri":"/connect-via-sftp-using-ssh.net/"},{"categories":["Development","How To"],"content":"Bonus * the trick * IтАЩve spent a lot of time before it works receiving a SSH exception тАЬInvalid private key fileтАЭ, but the same key file works fine when using the app Filezilla to connect, so #WhatTheHell is going on ЁЯШм Finally I realized this is because the private key must be compatible with SshNet, so we have to convert the private key using PuTTY key Generator (in my case, the same app we used to create the certificate). Once opened in PuTTY, just export your file key to OpenSSH and use this new ppk file instead of the previous one. Export OpenSSH key If you open the new file you will see that the key file now begins with: тАФтАУBEGIN RSA PRIVATE KEYтАФтАУ And ends with: тАФтАУEND RSA PRIVATE KEYтАФтАУ Now this is a valid SSH private key and it shoud work like a charm ;) Hope you enjoy it! ","date":"2017-11-29","objectID":"/connect-via-sftp-using-ssh.net/:3:0","tags":["csharp","net framework","SFTP","SSH.NET"],"title":"Connect via SFTP using SSH.NET","uri":"/connect-via-sftp-using-ssh.net/"},{"categories":["Development","How To"],"content":"Quick note How to remove diacritics (accents) from a C# string? public static string RemoveDiacritics(this string input) { var stFormD = input.Normalize(NormalizationForm.FormD); var len = stFormD.Length; var sb = new StringBuilder(); for (int i = 0; i \u003c len; i++) { var uc = System.Globalization.CharUnicodeInfo.GetUnicodeCategory(stFormD[i]); if (uc != System.Globalization.UnicodeCategory.NonSpacingMark) { sb.Append(stFormD[i]); } } return (sb.ToString().Normalize(NormalizationForm.FormC)); } ","date":"2014-06-26","objectID":"/remove-diacritics-in-strings/:1:0","tags":["csharp","net framework","Tip","SQL"],"title":"Remove diacritics (accents) in strings","uri":"/remove-diacritics-in-strings/"},{"categories":["Development","How To"],"content":"Bonus track How to remove in TSQL (Microsoft SQL Server) SELECT'├а├й├к├╢hello!'CollateSQL_Latin1_General_CP1253_CI_AI See you soon! ЁЯШЙ ","date":"2014-06-26","objectID":"/remove-diacritics-in-strings/:2:0","tags":["csharp","net framework","Tip","SQL"],"title":"Remove diacritics (accents) in strings","uri":"/remove-diacritics-in-strings/"},{"categories":["Development","How To"],"content":"Extracting system icons from Win32 ","date":"2014-04-16","objectID":"/extract-icons-win32/:1:0","tags":["csharp","net framework","API","Win32"],"title":"Extract extra large icon from a file, folder or drive","uri":"/extract-icons-win32/"},{"categories":["Development","How To"],"content":"Overwiew Hi, everyone! :) In a recent project I was required to show a list of files with their associated icons. It doesnтАЩt sounds quite difficult, and in fact it is not. Except if you have to deal with files in network paths or you want to get different icons sizes, apart the typical 32├Ч32. And well, that was the case If you only need local files and sizes of 32x32 p├нxels you can achieve this using the static method ExtractAssociatedIcon in the class System.Drawing.Icon, but sadly this method doesnтАЩt work with UNC (Universal Naming Convention) paths nor return other sizes that 32├Ч32 pixels. I had to show four different icons sizes including the extra-large icon also called тАЬjumboтАЭ, so I had to some functions and structures from the Win32 API. Of course, if anyone knows a better way to do it, please contact with me ASAP ","date":"2014-04-16","objectID":"/extract-icons-win32/:1:1","tags":["csharp","net framework","API","Win32"],"title":"Extract extra large icon from a file, folder or drive","uri":"/extract-icons-win32/"},{"categories":["Development","How To"],"content":"Show me the (final) code Today I prefer to start from the end so before starting, letтАЩs take a look to the final code: From a file path and the desired size we wanna retrieve the associated icon. var filename = \"\\\\myNetworkResource\\Folder\\SampleDocument.pdf\"; var size = IconSizeEnum.ExtraLargeIcon; var image = GetFileImageFromPath(filename, size); ","date":"2014-04-16","objectID":"/extract-icons-win32/:1:2","tags":["csharp","net framework","API","Win32"],"title":"Extract extra large icon from a file, folder or drive","uri":"/extract-icons-win32/"},{"categories":["Development","How To"],"content":"The ingredients Here are declared all the functions and types we need to use. You can simply paste all this code into a class. [ComImportAttribute()] [GuidAttribute(\"46EB5926-582E-4017-9FDF-E8998DAA0950\")] [InterfaceTypeAttribute(ComInterfaceType.InterfaceIsIUnknown)] private interface IImageList { [PreserveSig] int Add( IntPtr hbmImage, IntPtr hbmMask, ref int pi); [PreserveSig] int ReplaceIcon( int i, IntPtr hicon, ref int pi); [PreserveSig] int SetOverlayImage( int iImage, int iOverlay); [PreserveSig] int Replace( int i, IntPtr hbmImage, IntPtr hbmMask); [PreserveSig] int AddMasked( IntPtr hbmImage, int crMask, ref int pi); [PreserveSig] int Draw( ref IMAGELISTDRAWPARAMS pimldp); [PreserveSig] int Remove( int i); [PreserveSig] int GetIcon( int i, int flags, ref IntPtr picon); }; private struct IMAGELISTDRAWPARAMS { public int cbSize; public IntPtr himl; public int i; public IntPtr hdcDst; public int x; public int y; public int cx; public int cy; public int xBitmap; public int yBitmap; public int rgbBk; public int rgbFg; public int fStyle; public int dwRop; public int fState; public int Frame; public int crEffect; } private struct SHFILEINFO { public IntPtr hIcon; public int iIcon; public uint dwAttributes; [MarshalAs(UnmanagedType.ByValTStr, SizeConst = 254)] public string szDisplayName; [MarshalAs(UnmanagedType.ByValTStr, SizeConst = 260)] public string szTypeName; } private const int SHGFI_SMALLICON = 0x1; private const int SHGFI_LARGEICON = 0x0; private const int SHIL_JUMBO = 0x4; private const int SHIL_EXTRALARGE = 0x2; private const int WM_CLOSE = 0x0010; public enum IconSizeEnum { SmallIcon16 = SHGFI_SMALLICON, MediumIcon32 = SHGFI_LARGEICON, LargeIcon48 = SHIL_EXTRALARGE, ExtraLargeIcon = SHIL_JUMBO } [DllImport(\"user32\")] private static extern IntPtr SendMessage( IntPtr handle, int Msg, IntPtr wParam, IntPtr lParam); [DllImport(\"shell32.dll\")] private static extern int SHGetImageList( int iImageList, ref Guid riid, out IImageList ppv); [DllImport(\"Shell32.dll\")] private static extern int SHGetFileInfo( string pszPath, int dwFileAttributes, ref SHFILEINFO psfi, int cbFileInfo, uint uFlags); [DllImport(\"user32\")] private static extern int DestroyIcon( IntPtr hIcon); ","date":"2014-04-16","objectID":"/extract-icons-win32/:1:3","tags":["csharp","net framework","API","Win32"],"title":"Extract extra large icon from a file, folder or drive","uri":"/extract-icons-win32/"},{"categories":["Development","How To"],"content":"Putting it all together In this code weтАЩre using several API calls to the functions we declared before. You can paste all this code in the same class. HereтАЩs the tricky part: public static System.Drawing.Bitmap GetFileImageFromPath( string filepath, IconSizeEnum iconsize) { IntPtr hIcon = IntPtr.Zero; if (System.IO.Directory.Exists(filepath)) hIcon = GetIconHandleFromFolderPath(filepath, iconsize); else if (System.IO.File.Exists(filepath)) hIcon = GetIconHandleFromFilePath(filepath, iconsize); return GetBitmapFromIconHandle(hIcon); } private static IntPtr GetIconHandleFromFilePath(string filepath, IconSizeEnum iconsize) { var shinfo = new SHFILEINFO(); const uint SHGFI_SYSICONINDEX = 0x4000; const int FILE_ATTRIBUTE_NORMAL = 0x80; uint flags = SHGFI_SYSICONINDEX; return GetIconHandleFromFilePathWithFlags(filepath, iconsize, ref shinfo, FILE_ATTRIBUTE_NORMAL, flags); } private static IntPtr GetIconHandleFromFolderPath(string folderpath, IconSizeEnum iconsize) { var shinfo = new SHFILEINFO(); const uint SHGFI_ICON = 0x000000100; const uint SHGFI_USEFILEATTRIBUTES = 0x000000010; const int FILE_ATTRIBUTE_DIRECTORY = 0x00000010; uint flags = SHGFI_ICON | SHGFI_USEFILEATTRIBUTES; return GetIconHandleFromFilePathWithFlags(folderpath, iconsize, ref shinfo, FILE_ATTRIBUTE_DIRECTORY, flags); } private static System.Drawing.Bitmap GetBitmapFromIconHandle(IntPtr hIcon) { if (hIcon == IntPtr.Zero) return null; var myIcon = System.Drawing.Icon.FromHandle(hIcon); var bitmap = myIcon.ToBitmap(); myIcon.Dispose(); DestroyIcon(hIcon); SendMessage(hIcon, WM_CLOSE, IntPtr.Zero, IntPtr.Zero); return bitmap; } private static IntPtr GetIconHandleFromFilePathWithFlags( string filepath, IconSizeEnum iconsize, ref SHFILEINFO shinfo, int fileAttributeFlag, uint flags) { const int ILD_TRANSPARENT = 1; var retval = SHGetFileInfo(filepath, fileAttributeFlag, ref shinfo, Marshal.SizeOf(shinfo), flags); if (retval == 0) throw (new System.IO.FileNotFoundException()); var iconIndex = shinfo.iIcon; var iImageListGuid = new Guid(\"46EB5926-582E-4017-9FDF-E8998DAA0950\"); IImageList iml; var hres = SHGetImageList((int)iconsize, ref iImageListGuid, out iml); var hIcon = IntPtr.Zero; hres = iml.GetIcon(iconIndex, ILD_TRANSPARENT, ref hIcon); return hIcon; } First, we need to call to SHGetFileInfo function that receives a reference to a structure of type SHFILEINFO, which contains the index of the icon image within the system image list. We will use this index later. Then weтАЩve to perform a second call to the SHGetImageList function that receives an output parameter with an IImageList structure, which is modified within the function. Once we have that COM interface, we only need to call its GetIcon method, passing a parameter with the desired size, and obtaining a handle to the icon by reference. Finally, using the handle we can create an Icon and then convert it to a Bitmap or BitmapSource: Tip: DonтАЩt forget to destroy the resources (Icon) when working with the Win32 API! For better use IтАЩve also created an enumeration IconSizeEnum (see types declaration) with the different flags values as well: public enum IconSizeEnum { SmallIcon16 = SHGFI_SMALLICON, MediumIcon32 = SHGFI_LARGEICON, LargeIcon48 = SHIL_EXTRALARGE, ExtraLargeIcon = SHIL_JUMBO } Finally, create a new Form and add a PictureBox named тАШpictureBox1тАЩ a label called тАШlabelFilePathтАЩ and a Button, and into the ButtonтАЩs click event handler use this code: var size = IconSizeEnum.ExtraLargeIcon; var ofd = new OpenFileDialog(); if (ofd.ShowDialog() == System.Windows.Forms.DialogResult.OK) { labelFilePath.Text = ofd.FileName; pictureBox1.Image = YourClassNameHere.GetFileImageFromPath(ofd.FileName, size); } You can also use UNC paths, including network paths :) Hope this helps! ;) ","date":"2014-04-16","objectID":"/extract-icons-win32/:1:4","tags":["csharp","net framework","API","Win32"],"title":"Extract extra large icon from a file, folder or drive","uri":"/extract-icons-win32/"},{"categories":["Awards"],"content":"My 5 minutes of glory ЁЯШВ Yesterday the guys of MS published my brief interview MVP site. However, it is not the full version, that I copy here. ","date":"2012-10-31","objectID":"/mvp-site-interview/:1:0","tags":["Microsoft","MVP","Interview"],"title":"MVP site interview","uri":"/mvp-site-interview/"},{"categories":["Awards"],"content":"About Llu├нs Franco Born in Barcelona (Spain) with more than 20 years of experience in the software development sector, now lives in Andorra for the past 15 years with his family. Lluis holds a number of Microsoft official certifications such as MCP and MCTS and has been recognized as MVP for the past 10 years due to his active participation and moderation in the MSDN forums since 1997. Currently works as project development manager at FIMARGE a finantial services company based in Andorra. He founded the AndorraDotNet user group in 2007, being the first and almost unique user group based in the country. Since 2010 he is also the president of the Andorra IT Professionals Virtual Association. He owns several blogs and is also a regular host and speaker in local events in the region, such as the тАЬGeek-A-PaloozaaтАЭ conference that took place each summer. He also contributes articles to the technological section of a local newspaper. ","date":"2012-10-31","objectID":"/mvp-site-interview/:1:1","tags":["Microsoft","MVP","Interview"],"title":"MVP site interview","uri":"/mvp-site-interview/"},{"categories":["Awards"],"content":"Llu├нs Franco Interview 1 What does it mean being an MVP? It is something much more important to me now than when I was first awarded, as I wasnтАЩt aware at that time of all the wonderful things that would happen to me and the great people I would meet over the time. Not only at a technical level, what the MVP community of course has, but also for the human quality of the majority of MVPs. I met many of my current best friends thanks to the MVP Program. 2 How was your start in the community? It happened just by chance. As it was the case of many professionals in the IT industry I needed help to solve a problem and posted a question in the today disappeared Microsoft newsgroups, where I got the answer to my questions. I just loved this way of learning from other community members and one day I decided to give something back to them and I started to reply questions there. Sometime after I started running a webpage, a blog, another blogтАж. At some point I did a presentation at a local user group meeting and finally I started a new user group, hosting eventsтАж And I still really enjoy doing these things today. 3 What would you ask Steve Ballmer? Let me seeтАж The first thing that comes to my mind is to ask about some Microsoft business segments long-term strategy. But this is something that almost everybody would ask him, so I would rather ask about the good old timesтАж So Steve, in your opinion, what has been the most important fact in MicrosoftтАЩs history? I am talking about the key factor or point in time that has made Microsoft what it is today. 4 What is the best software product in history? I am in love with C#. For me this is the most beautiful, complete, and powerful programming language ever created. So therefore, the best software product for me is Visual Studio 2012, the best IDE in history (or at least the best I have ever used, that are many). Talking about operating systems, I have no doubt; Windows 8 is far the best one. At that point I have to say that I have not always worked with Microsoft products. 5 What would you change on Visual C#? I would continuously add functional characteristics to it. In the latest versions we have seen the introduction of generic functions, delegates management, LINQ and moreover, lambda expressions have made of C# the programming language I have always dreamed about. It is really fun programming on C#! However some things are still missing such as Nested functions, for example. So as some of my friends mentioned to me, this would make functions to be considered 1st level citizens. There are also other things such as making the Framework and IDE a bit lighter. There are many different types of objects there and some collections could be eliminated. 6 Which is the last book you have read? I am a compulsive technical book reader. But I also love fiction and science fiction books. I have last read тАШReady Player OneтАЩ, a novel with plenty of references of the 80тАЩs : videogames, music, films, role games, comics and even toys. It has a young writing style and I could identify myself with the background described there. I also read technical books and of course, my favorite one: тАШThe SilmarillionтАЩ. 7 Which music CD would you recommend? Just one? In that case I would go for RadioheadтАЩs тАШOk ComputerтАЩ. I really love this bandтАЩs the first albums. I like different kind of music from Bach to the heavy metal, including Jazz music too. 8 What makes you an excellent MVP? I donтАЩt consider myself an тАЬexcellent MVPтАЭ. For me being an MVP means a person with some technical skills but that is willing to share his knowledge and passion with the community in different ways, helping others that have helped them before. So the most important thing here is having the right attitude. So somebody that considers himself as being better than others because of the MVP Award probably wouldnтАЩt deserve this recognition. 9 What is in your тАЬComputer BagтАЭ? There is less and less software and more and more hardware in there. Many sm","date":"2012-10-31","objectID":"/mvp-site-interview/:1:2","tags":["Microsoft","MVP","Interview"],"title":"MVP site interview","uri":"/mvp-site-interview/"},{"categories":["Awards"],"content":"MVP of the year 2011 Surprised. Puzzled. Amazed. These are the words that define better my current feelings. However, while writing these lines IтАЩm just realizing I have a blissful smile, or maybe just a stupid smile. Why? Because I just received an email from Lisa Feigenbaum (Microsoft Community Program Manager) with this message: тАЬCongratulations on being awarded C# MVP of the Year based on your contributions in 2011!тАЭ WOW! ThatтАЩs amazing, and sincerely, totally unexpected For the last 9 years Ive been awarded as a Microsoft MVP and believe me, thatтАЩs something very important for me. Maybe not for being recognized as an тАЬexpertтАЭ because it is hard to use that word while there are so damn good people out there, but because they recognize the work of helping the community. So now, in a private survey all the C# MVPs around the world and the product team have decided to recognize my contributions with the тАЬC# MVP of the yearтАЭ award, whatever that means. On the next March 2nd there will be an honorary dinner sponsored by S. Somasegar (тАЬSomaтАЭ), Senior Vice President of the Developer Division at Microsoft, with other executives and community leads in the division. Unfortunately, I wonтАЩt be able to attend because I come back from Seattle the same day in the morning. Nevertheless I promise you while I am in Seattle IтАЩll try to have a beer with some of these guys. From here IтАЩd like to congratulate the rest of the winners (there are 29 in all categories) and thank all my colleagues. Hey people, youтАЩre great! Kind regards from Andorra, ","date":"2012-02-16","objectID":"/amazing.-mvp-of-the-year-2011/:1:0","tags":["Microsoft","MVP"],"title":"Amazing: Awarded MVP of the Year!","uri":"/amazing.-mvp-of-the-year-2011/"},{"categories":["Development","Fundamentals"],"content":"Introduction Programmers are procrastinators. Get in, get some coffee, check the mailbox, read the RSS feeds, read the news, check out latest articles on techie websites, browse through political discussions on the designated sections of the programming forums. Rinse and repeat to make sure nothing is missed. Go to lunch. Come back, stare at the IDE for a few minutes. Check the mailbox. Get some coffee. Before you know it, the day is over. The only thing, every once in a while challenging articles actually do pop up. If youтАЩre looking at the right places youтАЩll find at least one of these every couple of days. These articles are hard to get through and take some time, so they start piling up. Before you know it, you have a list of links and a folder full of PDF files and you wish you had a year in a small hut in the middle of the forest with nobody around for miles so you could catch up. Would be nice if someone came in every morning while youтАЩre taking a walk down the river to bring some food and take out the garbage. I donтАЩt know about your list, but a large chunk of the articles in mine are about functional programming. These generally are the hardest to get through. Written in a dry academic language, even the тАЬten year Wall Street industry veteransтАЭ donтАЩt understand what functional programming (also referred to as FP) articles are all about. If you ask a project manager in Citi Group or in Deutsche Bank1 why they chose to use JMS instead of Erlang theyтАЩll say they canтАЩt use academic languages for industrial strength applications. The problem is, some of the most complex systems with the most rigid requirements are written using functional programming elements. Something doesnтАЩt add up. ItтАЩs true that FP articles and papers are hard to understand, but they donтАЩt have to be. The reasons for the knowledge gap are purely historical. There is nothing inherently hard about FP concepts. Consider this article тАЬan accessible guide to FPтАЭ, a bridge from our imperative minds into the world of FP. Grab a coffee and keep on reading. With any luck your coworkers will start making fun of you for your FP comments in no time. So what is FP? How did it come about? Is it edible? If itтАЩs as useful as its advocates claim, why isnтАЩt it being used more often in the industry? Why is it that only people with PhDs tend to use it? Most importantly, why is it so damn hard to learn? What is all this closure, continuation, currying, lazy evaluation and no side effects business? How can it be used in projects that donтАЩt involve a university? Why does it seem to be so different from everything good, and holy, and dear to our imperative hearts? WeтАЩll clear this up very soon. LetтАЩs start with explaining the reasons for the huge gap between the real world and academic articles. The answer is as easy as taking a walk in the park. ","date":"2012-02-10","objectID":"/functional-programming-for-the-rest-of-us/:1:0","tags":["Functional","Programming","Lambda","History"],"title":"Functional Programming For The Rest of Us","uri":"/functional-programming-for-the-rest-of-us/"},{"categories":["Development","Fundamentals"],"content":"A Walk In The Park Fire up the time machine. Our walk in the park took place more than two thousand years ago, on a beautiful sunny day of a long forgotten spring in 380 B.C. Outside the city walls of Athens, under the pleasant shade of olive trees Plato was walking towards the Academy with a beautiful slave boy. The weather was lovely, the dinner was filling, and the conversation turned to philosophy. тАЬLook at these two studentsтАЭ, said Plato carefully picking words to make the question educational. тАЬWho do you think is taller?тАЭ The slave boy looked towards the basin of water where two men were standing. тАЬTheyтАЩre about the same heightтАЭ, he said. тАЬWhat do you mean тАШabout the sameтАЩ?\", asked Plato. тАЬWell, they look the same from here but IтАЩm sure if I were to get closer IтАЩd see that there is some difference.тАЭ Plato smiled. He was leading the boy in the right direction. тАЬSo you would say that there is nothing perfectly equal in our world?тАЭ After some thinking the boy replied: тАЬI donтАЩt think so. Everything is at least a little different, even if we canтАЩt see it.тАЭ The point hit home! тАЬThen if nothing is perfectly equal in this world, how do you think you understand the concept of тАШperfectтАЩ equality?тАЭ The slave boy looked puzzled. тАЬI donтАЩt knowтАЭ, he replied. So was born the first attempt to understand the nature of mathematics. Plato suggested that everything in our world is just an approximation of perfection. He also realized that we understand the concept of perfection even though we never encountered it. He came to conclusion that perfect mathematical forms must live in another world and that we somehow know about them by having a connection to that тАЬalternativeтАЭ universe. ItтАЩs fairly clear that there is no perfect circle that we can observe. But we also understand what a perfect circle is and can describe it via equations. What is mathematics, then? Why is the universe described with mathematical laws? Can all of the phenomena of our universe be described by mathematics?2 Philosophy of mathematics is a very complex subject. Like most philosophical disciplines it is far more adept at posing questions rather than providing answers. Much of the consensus revolves around the fact that mathematics is really a puzzle: we set up a set of basic non-conflicting principles and a set of rules on how to operate with these principles. We can then stack these rules together to come up with more complex rules. Mathematicians call this method a тАЬformal systemтАЭ or a тАЬcalculusтАЭ. We can effectively write a formal system for Tetris if we wanted to. In fact, a working implementation of Tetris is a formal system, just specified using an unusual representation. A civilization of furry creatures on Alpha Centauri would not be able to read our formalisms of Tetris and circles because their only sensory input might be an organ that senses smells. They likely will never find out about the Tetris formalism, but they very well might have a formalism for circles. We probably wouldnтАЩt be able to read it because our sense of smell isnтАЩt that sophisticated, but once you get past the representation of the formalism (via various sensory instruments and standard code breaking techniques to understand the language), the concepts underneath are understandable to any intelligent civilization. Interestingly if no intelligent civilization ever existed in the universe the formalisms for Tetris and circles would still hold water, itтАЩs just that nobody would be around to find out about them. If an intelligent civilization popped up, it would likely discover some formalisms that help describe the laws of our universe. They also would be very unlikely to ever find out about Tetris because there is nothing in the universe that resembles it. Tetris is one of countless examples of a formal system, a puzzle, that has nothing to do with the real world. We canтАЩt even be sure that natural numbers have full resemblance to the real world, after all one can easily think of a number s","date":"2012-02-10","objectID":"/functional-programming-for-the-rest-of-us/:2:0","tags":["Functional","Programming","Lambda","History"],"title":"Functional Programming For The Rest of Us","uri":"/functional-programming-for-the-rest-of-us/"},{"categories":["Development","Fundamentals"],"content":"A Bit of History LetтАЩs shift gears in our time machine. This time weтАЩll travel a lot closer, to the 1930s. The Great Depression was ravaging the New and the Old worlds. Almost every family from every social class was affected by the tremendous economic downturn. Very few sanctuaries remained where people were safe from the perils of poverty. Few people were fortunate enough to be in these sanctuaries, but they did exist. Our interest lies in mathematicians in Princeton University. The new offices constructed in gothic style gave Princeton an aura of a safe haven. Logicians from all over the world were invited to Princeton to build out a new department. While most of America couldnтАЩt find a piece of bread for dinner, high ceilings, walls covered with elaborately carved wood, daily discussions by a cup of tea, and walks in the forest were some of the conditions in Princeton. One mathematician living in such lavish lifestyle was a young man named Alonzo Church. Alonzo received a B.S. degree from Princeton and was persuaded to stay for graduate school. Alonzo felt the architecture was fancier than necessary. He rarely showed up to discuss mathematics with a cup of tea and he didnтАЩt enjoy the walks in the woods. Alonzo was a loner: he was most productive when working on his own. Nevertheless Alonzo had regular contacts with other Princeton inhabitants. Among them were Alan Turing, John von Neumann, and Kurt G├╢del. The four men were interested in formal systems. They didnтАЩt pay much heed to the physical world, they were interested in dealing with abstract mathematical puzzles instead. Their puzzles had something in common: the men were working on answering questions about computation. If we had machines that had infinite computational power, what problems would we be able to solve? Could we solve them automatically? Could some problems remain unsolved and why? Would various machines with different designs be equal in power? In cooperation with other men Alonzo Church developed a formal system called lambda calculus. The system was essentially a programming language for one of these imaginary machines. It was based on functions that took other functions as parameters and returned functions as results. The function was identified by a Greek letter lambda, hence the systemтАЩs name4. Using this formalism Alonzo was able to reason about many of the above questions and provide conclusive answers. Independently of Alonzo Church, Alan Turing was performing similar work. He developed a different formalism (now referred to as the Turing machine), and used it to independently come to similar conclusions as Alonzo. Later it was shown that Turing machines and lambda calculus were equivalent in power. This is where the story would stop, IтАЩd wrap up the article, and youтАЩd navigate to another page, if not for the beginning of World War II. The world was in flames. The U.S. Army and Navy used artillery more often than ever. In attempts to improve accuracy the Army employed a large group of mathematicians to continuously calculate differential equations required for solving ballistic firing tables. It was becoming obvious that the task was too great for being solved manually and various equipment was developed in order to overcome this problem. The first machine to solve ballistic tables was a Mark I built by IBM - it weighed five tons, had 750,000 parts and could do three operations per second. The race, of course, wasnтАЩt over. In 1949 an Electronic Discrete Variable Automatic Computer (EDVAC) was unveiled and had tremendous success. It was a first example of von NeumannтАЩs architecture and was effectively a real world implementation of a Turing machine. For the time being Alonzo Church was out of luck. In late 1950s an MIT professor John McCarthy (also a Princeton graduate) developed interest in Alonzo ChurchтАЩs work. In 1958 he unveiled a List Processing language (Lisp). Lisp was an implementation of AlonzoтАЩs lambda calculus that worked on von Neuman","date":"2012-02-10","objectID":"/functional-programming-for-the-rest-of-us/:3:0","tags":["Functional","Programming","Lambda","History"],"title":"Functional Programming For The Rest of Us","uri":"/functional-programming-for-the-rest-of-us/"},{"categories":["Development","Fundamentals"],"content":"Functional Programming Functional programming is a practical implementation of Alonzo ChurchтАЩs ideas. Not all lambda calculus ideas transform to practice because lambda calculus was not designed to work under physical limitations. Therefore, like object oriented programming, functional programming is a set of ideas, not a set of strict guidelines. There are many functional programming languages, and most of them do many things very differently. In this article I will explain the most widely used ideas from functional languages using examples written in Java (yes, you could write functional programs in Java if you felt particularly masochistic). In the next couple of sections weтАЩll take Java as is, and will make modifications to it to transform it into a useable functional language. LetтАЩs begin our quest. Like this post? Continue reading the original post in Slava AkhmechetтАЩs blog ","date":"2012-02-10","objectID":"/functional-programming-for-the-rest-of-us/:4:0","tags":["Functional","Programming","Lambda","History"],"title":"Functional Programming For The Rest of Us","uri":"/functional-programming-for-the-rest-of-us/"},{"categories":["Software"],"content":"The issue After a long timeтАж here we go again! Today a quick post, just a note: If you bought a MacBook Pro and using Boot Camp for running Windows, you may be possible experiment some chipset problems. In my particular case with USB and bluetooth devices (Wireless Notebook Presenter 8000), and a couple of window-freezed. Also, in some ocasions Windows threw an error: тАЬIntel 5 Series/3400 Series Chipset Family USB Universal Host Controller тАУ 3B3B (and 3B36) has a driver problemтАЭ. Chipset issues on Windows ","date":"2011-04-07","objectID":"/macbook-pro-series-3400-series-chipset-problems/:1:0","tags":["Apple","Boot Camp","MacBook Pro","Drivers","Chipset","Windows"],"title":"Macbook Pro - Series 3400 series chipset problems?","uri":"/macbook-pro-series-3400-series-chipset-problems/"},{"categories":["Software"],"content":"How to fix it After googling 10 minutes I just realized that lots of people are experimenting the same trouble, and I would like to show how to solve it in 3 simple steps: Open Windows Device Manager Show all devices (including hide devices, View menu) Disable both devices (3B3B \u0026 3B36) ThatтАЩs all! :-D Hope you enjoy this. ","date":"2011-04-07","objectID":"/macbook-pro-series-3400-series-chipset-problems/:2:0","tags":["Apple","Boot Camp","MacBook Pro","Drivers","Chipset","Windows"],"title":"Macbook Pro - Series 3400 series chipset problems?","uri":"/macbook-pro-series-3400-series-chipset-problems/"},{"categories":["Development","How To"],"content":"The scenario In business applications itтАЩs very common checking if the current user is member of the тАШdomain administratorsтАЩ role of your company. For example, recently I had to check if the current user has administrative privileges in order to show some advanced configuration options. ","date":"2010-12-13","objectID":"/check-current-user-is-domain-admin/:1:0","tags":["csharp","net framework","API","Win32","Active Directory","Domain","Administrator"],"title":"Check if current user is domain administrator","uri":"/check-current-user-is-domain-admin/"},{"categories":["Development","How To"],"content":"IsInRole To acomplish this we could use the IsInRole method from the WindowsPrincipal class. This method checks if an user is member of a Windows role and returns a bool value. One of its overrides allows to pass the SID of the role or a constant value based on the enumeration WindowsBuiltInrole. Note: For performance reasons, itтАЩs recommended to use the override: IsinRole(SecurityIdentifier). To check if current user is an administrator on the local computer we only need to do this: var wp = new WindowsPrincipal(WindowsIdentity.GetCurrent()); return wp.IsInRole(WindowsBuiltInRole.Administrator); Notice that itтАЩs realy easy, but WindowsBuiltInrole enumeration only contains local roles. So, if we would check if our user is member of a domain group, we should find the role SID in our domain. ","date":"2010-12-13","objectID":"/check-current-user-is-domain-admin/:1:1","tags":["csharp","net framework","API","Win32","Active Directory","Domain","Administrator"],"title":"Check if current user is domain administrator","uri":"/check-current-user-is-domain-admin/"},{"categories":["Development","How To"],"content":"WellKnownSidType LetтАЩs take a look at the following enumeration WellKnownSidType, this enumeration provides commonly used security identifiers and thatтАЩs exactly whan we want. LetтАЩs try to use it in our code: var wp = new WindowsPrincipal(WindowsIdentity.GetCurrent()); var sid = new SecurityIdentifier(WellKnownSidType.AccountDomainAdminsSid, null); return wp.IsInRole(sid); Boom! DoтАЩh! It seems that we need to pass the second argument called DomainSId, which represents the security identifier of your company domain. ","date":"2010-12-13","objectID":"/check-current-user-is-domain-admin/:1:2","tags":["csharp","net framework","API","Win32","Active Directory","Domain","Administrator"],"title":"Check if current user is domain administrator","uri":"/check-current-user-is-domain-admin/"},{"categories":["Development","How To"],"content":"DomainSid This domain SID is required for some WellKnownSidType values and we can get it using the DirectoryEntry class from the assembly System.DirectoryServices. var domain = Domain.GetDomain(new DirectoryContext( DirectoryContextType.Domain, IPGlobalProperties.GetIPGlobalProperties().DomainName)); using (DirectoryEntry de = domain.GetDirectoryEntry()) { var domainSIdArray = (byte[])de.Properties[\"objectSid\"].Value; var domainSId = new SecurityIdentifier(domainSIdArray, 0); } First, we obtain a reference to the domain using the domain name. Then get of the value the property objectSid as a byte array, and finally transform this value into a valid SecurityIdentifier which is what we need. ","date":"2010-12-13","objectID":"/check-current-user-is-domain-admin/:1:3","tags":["csharp","net framework","API","Win32","Active Directory","Domain","Administrator"],"title":"Check if current user is domain administrator","uri":"/check-current-user-is-domain-admin/"},{"categories":["Development","How To"],"content":"Show me the code Putting it all together. Like my collegue and friend @alegrebandolero IтАЩm also a fan of extension methods. So, letтАЩs create an extension method for the WindowsIdentity class: public static bool IsDomainAdmin(this WindowsIdentity identity) { var domain = Domain.GetDomain(new DirectoryContext( DirectoryContextType.Domain, IPGlobalProperties.GetIPGlobalProperties().DomainName)); using (DirectoryEntry de = domain.GetDirectoryEntry()) { var domainSIdArray = (byte[])de.Properties[\"objectSid\"].Value; var domainSId = new SecurityIdentifier(domainSIdArray, 0); var domainAdminsSId = new SecurityIdentifier( WellKnownSidType.AccountDomainAdminsSid, domainSId); var wp = new WindowsPrincipal(identity); return wp.IsInRole(domainAdminsSId); } } ThatтАЩs all. Now, use it as follows: if(WindowsIdentity.GetCurrent().IsDomainAdmin()) { //some code here... } Edit 12/14/2010: Since Windows Vista each Windows user have a couple of security tokens. The first one is the normal token with limited privileges, and the second one only works when you тАШrun as administratorтАЩ. This code only works if you are using the second token, running the application as administrator. HYEI, happy coding! December 2010 ","date":"2010-12-13","objectID":"/check-current-user-is-domain-admin/:2:0","tags":["csharp","net framework","API","Win32","Active Directory","Domain","Administrator"],"title":"Check if current user is domain administrator","uri":"/check-current-user-is-domain-admin/"},{"categories":["Development","How To"],"content":"Gettings all controls from a container v2 ","date":"2010-11-15","objectID":"/retrieve-all-controls-using-generics-ii/:1:0","tags":["csharp","net framework","generics","LINQ"],"title":"Retrieve all controls using generics (II)","uri":"/retrieve-all-controls-using-generics-ii/"},{"categories":["Development","How To"],"content":"A better approach In my previous post I created a recursive function to retrieve all controls inside a form and its containers. Today, my colleague and friend Eduard Tom├аs sent me another solution to the same topic based on LINQ. ItтАЩs simply and really, really pretty тЭд ","date":"2010-11-15","objectID":"/retrieve-all-controls-using-generics-ii/:1:1","tags":["csharp","net framework","generics","LINQ"],"title":"Retrieve all controls using generics (II)","uri":"/retrieve-all-controls-using-generics-ii/"},{"categories":["Development","How To"],"content":"The power of LINQ Before starting, we need to solve this: LINQ works over IEnumerable, but Control.Controls property returns a ControlCollection type. In fact, nowadays, since we have Generics this class has no sense (like other 1.000 similar classes) but remember that Generics doesnтАЩt appeared until .NET Framework 2.0. So, our first step will be retrieve an IEnumerable from a ControlCollection property of a Control. This could be accomplished using an extensor method over the class ControlCollection: public static IEnumerable\u003cControl\u003e AsEnumerable(this Control.ControlCollection @this) { foreach (var control in @this) yield return (Control)control; } Note that using this method we are able to transform CollectionControl to IEnumerable and get full access to the power of Linq. Now, letтАЩs create a method to retrieve all controls of a type: public static IEnumerable\u003cT\u003e GetAllControls\u003cT\u003e(this Control @this) where T : Control { return @this.Controls.AsEnumerable().Where( x =\u003e x.GetType() == typeof(T)).Select( y =\u003e (T)y).Union( @this.Controls.AsEnumerable().SelectMany( x =\u003e GetAllControls\u003cT\u003e(x)).Select(y =\u003e (T)y)); } It looks cool, isnтАЩt it? No loops, no ifsтАж only pure LINQ power! :-) Note that converting Controls property into an Enumerable allow us to use all those IEnumerable LINQ methods like Select, Where, Union or SelectManyтАж in just a single line of code! This is amazing, this is functional programming style! ","date":"2010-11-15","objectID":"/retrieve-all-controls-using-generics-ii/:1:2","tags":["csharp","net framework","generics","LINQ"],"title":"Retrieve all controls using generics (II)","uri":"/retrieve-all-controls-using-generics-ii/"},{"categories":["Development","How To"],"content":"Applying several actions ThereтАЩs also a small difference with my original solution. In the previous one I used an internal List to copy all controls references. The new one only iterates over the original collection. ThereтАЩs no internal lists. Another difference present┬аin LINQ solution is we are returning an IEnumerable, so we loose the ForEach method (because IEnumerable doesnтАЩt implements this method). But building our own ForEach method is as trivial as: public static void ForEach\u003cT\u003e(this IEnumerable\u003cT\u003e @this, Action\u003cT\u003e action) { foreach (T t in @this) { action(t); } } Now, weтАЩve all the necessary ingredients to get all controls and do whatever we need :D this.GetAllControls\u003cTextBox\u003e().ForEach(p =\u003e p.Enabled = false); this.GetAllControls\u003cTextBox\u003e().ForEach(p =\u003e { p.BackColor = Color.LightGray; p.ForeColor = Color.Red; p.Text = \"hello\"; p.TextAlign = HorizontalAlignment.Center; }); HYEI, happy coding! :-) November 2010 ","date":"2010-11-15","objectID":"/retrieve-all-controls-using-generics-ii/:1:3","tags":["csharp","net framework","generics","LINQ"],"title":"Retrieve all controls using generics (II)","uri":"/retrieve-all-controls-using-generics-ii/"},{"categories":["Development","How To"],"content":"Gettings all controls from a container ","date":"2010-11-09","objectID":"/retrieve-all-controls-using-generics-i/:1:0","tags":["csharp","net framework","generics"],"title":"Retrieve all controls using generics (I)","uri":"/retrieve-all-controls-using-generics-i/"},{"categories":["Development","How To"],"content":"ThatтАЩs the question How many times have you ever heard something similar? :) How to clear the content of all the textboxes in a form? The question may vary a littles bit but itтАЩs always related to obtain all controls of a determined type (Button TextBox, etc) in a form or maybe in another type of container like a Panel or user control. ","date":"2010-11-09","objectID":"/retrieve-all-controls-using-generics-i/:1:1","tags":["csharp","net framework","generics"],"title":"Retrieve all controls using generics (I)","uri":"/retrieve-all-controls-using-generics-i/"},{"categories":["Development","How To"],"content":"Generics and Extension methods Using generics itтАЩs really easy! Firstly letтАЩs create an extensor method, that returns a collection of all the controls of a type in a Form or container. And then, we will use this collection to do an action over each returned item. The extensor method public static List\u003cT\u003e GetControls\u003cT\u003e(this Control container) where T : Control { List\u003cT\u003e controls = new List\u003cT\u003e(); foreach (Control c in container.Controls) { if (c is T) controls.Add((T)c); controls.AddRange(GetControls\u003cT\u003e(c)); } return controls; } This method retrieves the collection of Controls from a container calling it itself recursively, retrieving the content of all his containers. How to use it? this.GetControls\u003cTextBox\u003e().ForEach(p =\u003e p.Text = string.Empty); We can use the extensor method directly into a form because Form class inherits from ContainerControl, that inherits from ScrollableControl, and ScrollableControl from Control. Or, in other words, our Form will implement our extensor method. So, at compile time we should specify the type of the controls we want to retrieve. In the example we are using TextBox, but you can use Button type instead. And then, use ForEach to apply an action on each one of the items returned. Moreover, if we want to retrieve only the controls into a container (GroupBox, Panel, TabControl or another that inherits from Control), you can call the method for this particular control. myPanel.GetControls\u003cButton\u003e().ForEach(p =\u003e p.Enabled = false); Applying several actions In most cases, we would apply several actions to each control (not only one). In this case itтАЩs quite easy: The only thing we have to do is create a method that receives a parameter of this type, and call it passing the control as an argument: this.GetControls\u003cTextBox\u003e().ForEach(p =\u003e ApplyFormat(p)); private void ApplyFormat(TextBox text) { text.BackColor = Color.LightGray; text.ForeColor = Color.Red; text.Text = \"hello\"; text.TextAlign = HorizontalAlignment.Center; } Or maybe, using an тАШaction delegateтАЩ, both options are correct: this.GetControls\u003cTextBox\u003e().ForEach(p =\u003e { p.BackColor = Color.LightGray; p.ForeColor = Color.Red; p.Text = \"hello\"; p.TextAlign = HorizontalAlignment.Center; }); Happy coding! :-) November 2010 ","date":"2010-11-09","objectID":"/retrieve-all-controls-using-generics-i/:1:2","tags":["csharp","net framework","generics"],"title":"Retrieve all controls using generics (I)","uri":"/retrieve-all-controls-using-generics-i/"},{"categories":["Development","How To"],"content":"Tables Tables Are Cool col 1 is left-aligned $1600 col 2 is centered $12 col 3 is right-aligned $1 ","date":"1999-06-26","objectID":"/ztemplate-copy/:1:0","tags":["csharp","net framework","Tip","SQL"],"title":"Extended shortcodes","uri":"/ztemplate-copy/"},{"categories":["Development","How To"],"content":"Gist ","date":"1999-06-26","objectID":"/ztemplate-copy/:2:0","tags":["csharp","net framework","Tip","SQL"],"title":"Extended shortcodes","uri":"/ztemplate-copy/"},{"categories":["Development","How To"],"content":"Admonition admon samples This is a bug A tip banner Or This is a tip A tip banner ","date":"1999-06-26","objectID":"/ztemplate-copy/:3:0","tags":["csharp","net framework","Tip","SQL"],"title":"Extended shortcodes","uri":"/ztemplate-copy/"},{"categories":["Development","How To"],"content":"Mermaid mermaid samples ","date":"1999-06-26","objectID":"/ztemplate-copy/:4:0","tags":["csharp","net framework","Tip","SQL"],"title":"Extended shortcodes","uri":"/ztemplate-copy/"},{"categories":["Development","How To"],"content":"Flow ","date":"1999-06-26","objectID":"/ztemplate-copy/:4:1","tags":["csharp","net framework","Tip","SQL"],"title":"Extended shortcodes","uri":"/ztemplate-copy/"},{"categories":["Development","How To"],"content":"Gaant ","date":"1999-06-26","objectID":"/ztemplate-copy/:4:2","tags":["csharp","net framework","Tip","SQL"],"title":"Extended shortcodes","uri":"/ztemplate-copy/"},{"categories":["Development","How To"],"content":"git ","date":"1999-06-26","objectID":"/ztemplate-copy/:4:3","tags":["csharp","net framework","Tip","SQL"],"title":"Extended shortcodes","uri":"/ztemplate-copy/"},{"categories":["Development","How To"],"content":"pie ","date":"1999-06-26","objectID":"/ztemplate-copy/:4:4","tags":["csharp","net framework","Tip","SQL"],"title":"Extended shortcodes","uri":"/ztemplate-copy/"},{"categories":["Development","How To"],"content":"eCharts echarts samples Line chart Map ","date":"1999-06-26","objectID":"/ztemplate-copy/:5:0","tags":["csharp","net framework","Tip","SQL"],"title":"Extended shortcodes","uri":"/ztemplate-copy/"}]
>>>>>>> 5cd4cec6a739b6e013b93b207a3fa1a06ba169b3
